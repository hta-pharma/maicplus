[{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using maicplus","text":"package describes steps required perform matching-adjusted indirect comparison (MAIC) analysis using maicplus package R endpoint interest either time--event (e.g. overall survival) binary (e.g. objective tumor response). methods described document based originally described Signorovitch et al. 2010 described National Institute Health Care Excellence (NICE) Decision Support Unit (DSU) Technical Support Document (TSD) 18. [signorovitch2010; phillippo2016a] MAIC methods often required : common comparator treatment link clinical trial new intervention clinical trials treatments given disease area. example study new intervention single arm trial control group. commonly referred unanchored MAIC. common comparator available link clinical trial new intervention clinical trial one treatment given disease area substantial differences patient demographic disease characteristics believed treatment effect modifiers. commonly referred anchored MAIC. premise MAIC methods adjust -trial differences patient demographic disease characteristics baseline. common treatment comparator ‘linked network’ unavailable, MAIC assumes differences absolute outcomes observed trial entirely explained imbalances prognostic variables treatment effect modifiers. Prognostic variables predictive disease outcomes, independent treatment received. example, older patients may increased risk death compared younger patients. Treatment effect modifiers variables influence relative effect one treatment compared another. example patients better performance status may experience larger treatment benefit worse performance status. assumption, every prognostic variable every treatment effect modifier imbalanced two studies must available. assumption generally considered difficult meet. [phillippo2016a] several ways identifying prognostic variables/treatment effect modifiers used MAIC analyses, include: Clinical expertise (available project) Published papers/previous submissions (identified disease area previously) Univariable/multivariable regression analyses identify covariates significant effect outcome Subgroup analyses clinical trials may identify interactions patient characteristics relative treatment effect","code":""},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"theory-behind-maic","dir":"Articles","previous_headings":"","what":"Theory behind MAIC","title":"Using maicplus","text":"briefly go theory behind MAIC. detailed information, see Signorovitch et al. 2010. Let us define \\(t_i\\) treatment patient \\(\\) received. assume \\(t_i=0\\) patient received intervention (IPD) \\(t_i=1\\) patient received comparator treatment. causal effect treatment \\(T=0\\) vs \\(T=1\\) mean outcome \\(Y\\) can estimated \\[ \\frac{\\sum_{=1}^{n}y_{}(1-t_{})w_{}}{\\sum_{=1}^{n}(1-t_{})w_{}}-\\bar{y}_{1} \\] \\(w_i=\\frac{Pr(T_i=1\\mid x_i)}{Pr(T_i=0\\mid x_i)}\\) odds patient \\(\\) received treatment \\(T=1\\) vs \\(T=0\\) (.e. enrolls aggregate data study vs IPD study) given baseline characteristics \\(x_i\\). Thus, patients receiving \\(T=0\\) re-weighted match distribution patients receiving \\(T=1\\). Note causal effect case outcome \\(Y\\) continuous. outcome binary, \\(Y\\) proportion use link function logit give us causal effect odds ratio scale. propensity score methods, may assume \\(w_i\\) follow logistic regression form \\[ w_{}=exp(x_i^{T}\\beta) \\] However, order estimate \\(\\beta\\), use maximum likelihood approach IPD trials. Instead, use method moments. estimate \\(\\beta\\) weighted averages covariates IPD exactly matches aggregate data averages. Mathematically speaking, want estimate \\(\\beta\\) : \\[ 0=\\frac{\\sum_{=1}^{n}x_{}exp(x_i^{T}\\hat{\\beta})}{\\sum_{=1}^{n}exp(x_i^{T}\\hat{\\beta})}-\\bar{x}_{agg} \\] \\(x_i\\) contains confounders logistic regression \\(w_i\\) correctly specified, obtain consistent estimate causal effect intervention vs comparator treatment. equation equivalent \\[ 0=\\sum_{=1}^{n}(x_{}-\\bar{x}_{agg})exp(x_{}^{T}\\hat{\\beta}) \\] transform transform IPD subtracting aggregate data means (centering needed preprocessing). \\[ 0=\\sum_{=1}^{n}x_{}exp(x_{}^{T}\\hat{\\beta}) \\] Note first derivative \\[ Q(\\beta)=\\sum_{=1}^{n}exp(x_{}^{T}\\hat{\\beta}) \\] second derivative \\[ Q''(\\beta)=\\sum_{=1}^{n}x_ix_i^Texp(x_{}^{T}\\hat{\\beta}) \\] Since \\(Q''(\\beta)\\) positive-definite \\(\\beta\\), \\(Q(\\beta)\\) convex finite solution equation unique corresponds global minimum \\(Q(\\beta)\\). Thus, can use optimization methods calculate \\(\\beta\\).","code":""},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"example-scenario","dir":"Articles","previous_headings":"","what":"Example scenario","title":"Using maicplus","text":"present unanchored MAIC two treatments lung cancer. two endpoints compared overall survival (time event outcome) objective response (binary outcome). data available : Individual patient data single arm study Aggregate summary data comparator study Pseudo patient data comparator study. required matching process needed derive relative treatment effects internal treatment comparator treatment.","code":""},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"preprocessing","dir":"Articles","previous_headings":"","what":"Preprocessing","title":"Using maicplus","text":"Additional suggested packages vignette:","code":"library(maicplus) library(dplyr) # this is used for data merging/cleaning. Package itself does not depend on dplyr #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union # library(clubSandwich) # For robust standard error in logistic regression library(sandwich)  library(survival) library(survminer) # for ggsurvplot #> Loading required package: ggplot2 #> Loading required package: ggpubr #>  #> Attaching package: 'survminer' #> The following object is masked from 'package:survival': #>  #>     myeloma library(ggplot2) # for ggplot functions library(boot) # for bootstrapping #>  #> Attaching package: 'boot' #> The following object is masked from 'package:survival': #>  #>     aml"},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"preprocessing-ipd","dir":"Articles","previous_headings":"Preprocessing","what":"Preprocessing IPD","title":"Using maicplus","text":"example scenario, age, sex, Eastern Cooperative Oncology Group (ECOG) performance status, smoking status, number previous treatments identified imbalanced prognostic variables/treatment effect modifiers. example reads combines data three standard simulated data sets (adsl, adrs adtte) saved ‘.csv’ files.","code":"adsl <- read.csv(system.file(\"extdata\", \"adsl.csv\",   package = \"maicplus\",   mustWork = TRUE )) adrs <- read.csv(system.file(\"extdata\", \"adrs.csv\",   package = \"maicplus\",   mustWork = TRUE )) adtte <- read.csv(system.file(\"extdata\", \"adtte.csv\", package = \"maicplus\", mustWork = TRUE))  # Data containing the matching variables adsl <- adsl %>%   mutate(SEX_MALE = ifelse(SEX == \"Male\", 1, 0)) %>%   mutate(AGE_SQUARED = AGE^2)  # Could use built-in function for dummizing variables # adsl <- dummize_ipd(adsl, dummize_cols=c(\"SEX\"), dummize_ref_level=c(\"Female\"))  # Response data adrs <- adrs %>%   filter(PARAM == \"Response\") %>%   transmute(USUBJID, ARM, RESPONSE = AVAL)  # Time to event data (overall survival) adtte <- adtte %>%   filter(PARAMCD == \"OS\") %>%   mutate(EVENT = 1 - CNSR) %>%   transmute(USUBJID, ARM, TIME = AVAL, EVENT)  # Combine all ipd data ipd <- adsl %>%   full_join(adrs, by = c(\"USUBJID\", \"ARM\")) %>%   full_join(adtte, by = c(\"USUBJID\", \"ARM\")) head(ipd) #>   X USUBJID ARM AGE    SEX SMOKE ECOG0 N_PR_THER SEX_MALE AGE_SQUARED RESPONSE #> 1 1       1   A  45   Male     0     0         4        1        2025        0 #> 2 2       2   A  71   Male     0     0         3        1        5041        1 #> 3 3       3   A  58   Male     1     1         2        1        3364        1 #> 4 4       4   A  48 Female     0     1         4        0        2304        1 #> 5 5       5   A  69   Male     0     1         4        1        4761        0 #> 6 6       6   A  48 Female     0     1         4        0        2304        0 #>       TIME EVENT #> 1 281.5195     0 #> 2 500.0000     0 #> 3 304.6406     0 #> 4 102.4731     0 #> 5 101.6632     0 #> 6 237.0593     1"},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"preprocessing-aggregate-data","dir":"Articles","previous_headings":"Preprocessing","what":"Preprocessing aggregate data","title":"Using maicplus","text":"two ways specifying aggregate data. One approach read aggregate data using excel spreadsheet. spreadsheet, possible variable types include mean, median, standard deviation continuous variables count proportion binary variables. naming followed suffixes accordingly: _COUNT, _MEAN, _MEDIAN, _SD, _PROP. , process_agd convert count proportions. way define data frame aggregate data R. way, _COUNT prefix specified proportion allowed binary variables. suffix names first approach. Possible missingness binary variables accounted subtracting denominator missing count .e. proportion = count / (N - missing).","code":"# Through excel spreadsheet # target_pop <- read.csv(system.file(\"extdata\",\"aggregate_data_example_1.csv\", package = \"maicplus\", mustWork = TRUE)) # agd <- process_agd(target_pop)  # Second approach by defining a data frame in R agd <- data.frame(   STUDY = \"Lung study\",   ARM = \"Total\",   N = 300,   AGE_MEAN = 51,   AGE_MEDIAN = 49,   AGE_SD = 3.25,   SEX_MALE_PROP = 147 / 300,   ECOG0_PROP = 0.40,   SMOKE_PROP = 58 / (300 - 5),   N_PR_THER_MEDIAN = 2 )"},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"preprocessing-aggregate-data-1","dir":"Articles","previous_headings":"Preprocessing","what":"Preprocessing aggregate data","title":"Using maicplus","text":"","code":"#### prepare data ipd_centered <- center_ipd(ipd = ipd, agd = agd) head(ipd_centered) #>   X USUBJID ARM AGE    SEX SMOKE ECOG0 N_PR_THER SEX_MALE AGE_SQUARED RESPONSE #> 1 1       1   A  45   Male     0     0         4        1        2025        0 #> 2 2       2   A  71   Male     0     0         3        1        5041        1 #> 3 3       3   A  58   Male     1     1         2        1        3364        1 #> 4 4       4   A  48 Female     0     1         4        0        2304        1 #> 5 5       5   A  69   Male     0     1         4        1        4761        0 #> 6 6       6   A  48 Female     0     1         4        0        2304        0 #>       TIME EVENT AGE_CENTERED AGE_MEDIAN_CENTERED AGE_SQUARED_CENTERED #> 1 281.5195     0           -6                -0.5            -586.5625 #> 2 500.0000     0           20                 0.5            2429.4375 #> 3 304.6406     0            7                 0.5             752.4375 #> 4 102.4731     0           -3                -0.5            -307.5625 #> 5 101.6632     0           18                 0.5            2149.4375 #> 6 237.0593     1           -3                -0.5            -307.5625 #>   SEX_MALE_CENTERED ECOG0_CENTERED SMOKE_CENTERED N_PR_THER_MEDIAN_CENTERED #> 1              0.51           -0.4     -0.1966102                       0.5 #> 2              0.51           -0.4     -0.1966102                       0.5 #> 3              0.51            0.6      0.8033898                      -0.5 #> 4             -0.49            0.6     -0.1966102                       0.5 #> 5              0.51            0.6     -0.1966102                       0.5 #> 6             -0.49            0.6     -0.1966102                       0.5"},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"how-to-handle-standard-deviation-aggregate-summary","dir":"Articles","previous_headings":"Preprocessing > Preprocessing aggregate data","what":"How to handle standard deviation aggregate summary","title":"Using maicplus","text":"described Phillippo et al. 2016, balancing mean standard deviation continuous variables (possible) may considered cases. standard deviation provided comparator population, preprocessing done target population, \\(E(X^2)\\) calculated using variance formula \\(Var(X)=E(X^{2})-E(X)^{2}\\). \\(E(X^2)\\) target population matched IPD level data, \\(X^{2}\\) calculated preprocessing stage IPD.","code":""},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"how-to-handle-median-aggregate-summary","dir":"Articles","previous_headings":"Preprocessing > Preprocessing aggregate data","what":"How to handle median aggregate summary","title":"Using maicplus","text":"median provided, IPD preprocessed categorize variable binary variable. values IPD higher comparator population median assigned value 1. Conversely, values lower assigned value 0. Comparator population median replaced 0.5 adjust categorization IPD data. newly created IPD binary variable matched proportion 0.5.","code":""},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"calculating-weights","dir":"Articles","previous_headings":"","what":"Calculating weights","title":"Using maicplus","text":"Another check weights calculated look weighted covariates match aggregate data summary.","code":"# list variables that are going to be used to match centered_colnames <- c(\"AGE\", \"AGE_SQUARED\", \"SEX_MALE\", \"ECOG0\", \"SMOKE\", \"N_PR_THER_MEDIAN\") centered_colnames <- paste0(centered_colnames, \"_CENTERED\")  weighted_data <- estimate_weights(   data = ipd_centered,   centered_colnames = centered_colnames )  # Alternatively, you can specify the numeric column locations for centered_colnames # weighted_data <- estimate_weights(ipd_centered, centered_colnames = c(14, 16:20))  # Two options to plot weights plot using base R or ggplot plot(weighted_data) plot(weighted_data, ggplot = TRUE) outdata <- check_weights(weighted_data, agd) outdata #>   covariate match_stat internal_trial internal_trial_after_weighted #> 1       AGE       Mean         59.850                         51.00 #> 2       AGE         SD          9.011                          3.25 #> 3  SEX_MALE       Prop          0.380                          0.49 #> 4     ECOG0       Prop          0.410                          0.40 #> 5     SMOKE       Prop          0.320                          0.20 #> 6 N_PR_THER     Median          3.000                          2.00 #>   external_trial sum_centered_IPD_with_weights #> 1          51.00                        0.0001 #> 2           3.25                        0.0125 #> 3           0.49                        0.0000 #> 4           0.40                        0.0000 #> 5           0.20                        0.0000 #> 6           2.00                        0.0000"},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"time-to-event-analysis","dir":"Articles","previous_headings":"","what":"Time to event analysis","title":"Using maicplus","text":"first need combine internal IPD data pseudo comparator IPD. obtain pseudo comparator IPD, digitize Kaplan Meier curves comparator study.","code":"pseudo_ipd <- read.csv(system.file(\"extdata\", \"psuedo_IPD.csv\", package = \"maicplus\", mustWork = TRUE)) ipd_matched <- weighted_data$data  # Need to specify pseudo_ipd ARM if not specified pseudo_ipd$ARM <- \"B\" # Need to specify ARM for pseudo ipd  # Need to specify weights for pseudo_ipd which is 1 pseudo_ipd$weights <- 1  # make sure pseudo_ipd name has same name compared with ipd_matched for time, event, arm colnames(pseudo_ipd) <- c(\"TIME\", \"EVENT\", \"ARM\", \"weights\")  combined_data_tte <- rbind(   ipd_matched[, colnames(pseudo_ipd)],   pseudo_ipd )  head(combined_data_tte) #>       TIME EVENT ARM      weights #> 1 281.5195     0   A 6.884028e-01 #> 2 500.0000     0   A 5.669105e-08 #> 3 304.6406     0   A 1.146355e-01 #> 4 102.4731     0   A 1.178307e+00 #> 5 101.6632     0   A 1.605203e-06 #> 6 237.0593     1   A 1.178307e+00"},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"report-1-kaplan-meier-plot","dir":"Articles","previous_headings":"Time to event analysis","what":"Report 1: Kaplan-Meier plot","title":"Using maicplus","text":"also \"ggplot\" option Kaplan-Meier curves using survminer R package.","code":"kmobj <- survfit(Surv(TIME, EVENT) ~ ARM, combined_data_tte, conf.type = \"log-log\") kmobj_adj <- survfit(Surv(TIME, EVENT) ~ ARM,   combined_data_tte,   weights = combined_data_tte$weights, conf.type = \"log-log\" )  par(cex.main = 0.85)  kmdat <- do.call(rbind, survfit_makeup(kmobj)) kmdat$treatment <- factor(kmdat$treatment) basic_kmplot(kmdat,   time_scale = \"month\",   time_grid = seq(0, 20, by = 2),   show_risk_set = FALSE,   main_title = \"Kaplan-Meier Curves\",   subplot_heights = NULL,   suppress_plot_layout = FALSE,   use_colors = NULL,   use_line_types = NULL ) # km_plot2(combined_data_tte, trt = \"A\", trt_ext = \"B\", censor = TRUE, risk.table = TRUE)"},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"report-2-analysis-table-cox-model-before-and-after-matching-incl-median-survival-time","dir":"Articles","previous_headings":"Time to event analysis","what":"Report 2: Analysis table (Cox model) before and after matching, incl Median Survival Time","title":"Using maicplus","text":"can fit cox regression model using combined dataset. weight adjusted cox regression, fit model robust standard errors. Along hazard ratios, can also find median survival time using medSurv_makeup function. , report_table_tte function nicely combines information together create result table.","code":"# Fit a Cox model with/without weights to estimate the HR unweighted_cox <- coxph(Surv(TIME, EVENT == 1) ~ ARM, data = combined_data_tte) weighted_cox <- coxph(Surv(TIME, EVENT == 1) ~ ARM,   data = combined_data_tte, weights = combined_data_tte$weights, robust = TRUE )  # Derive median survival time medSurv <- medSurv_makeup(kmobj, legend = \"before matching\", time_scale = \"day\") medSurv_adj <- medSurv_makeup(kmobj_adj, legend = \"after matching\", time_scale = \"day\") medSurv_out <- rbind(medSurv, medSurv_adj) medSurv_out #>   treatment            type records    n.max  n.start    events    rmean #> 1     ARM=A before matching     500 500.0000 500.0000 190.00000 265.1012 #> 2     ARM=B before matching     300 300.0000 300.0000 178.00000 130.9893 #> 3     ARM=A  after matching     500 199.8422 199.8422  66.84953 307.7223 #> 4     ARM=B  after matching     300 300.0000 300.0000 178.00000 130.9893 #>   se(rmean)    median   0.95LCL  0.95UCL #> 1  10.80981 230.94839 191.10767 313.1574 #> 2  10.24910  83.58535  68.82298 101.0786 #> 3  16.71338 362.20670 237.05932 452.7209 #> 4  10.24910  83.58535  68.82298 101.0786 rbind(   report_table_tte(unweighted_cox, medSurv, tag = paste0(\"Before/\", \"Overall survival\")),   report_table_tte(weighted_cox, medSurv_adj, tag = paste0(\"After/\", \"Overall survival\")) ) #>                   Matching treatment     N n.events(%)     median[95% CI] #> 2  Before/Overall survival     ARM=B 300.0   178(59.3)  83.6[ 68.8;101.1] #> 1                              ARM=A 500.0   190(38.0) 230.9[191.1;313.2] #> 21  After/Overall survival     ARM=B 300.0   178(59.3)  83.6[ 68.8;101.1] #> 11                             ARM=A 199.8  66.8(33.5) 362.2[237.1;452.7] #>         HR[95% CI] p-Value #> 2  2.67[2.16;3.29]  <0.001 #> 1                          #> 21 3.46[2.53;4.74]  <0.001 #> 11"},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"report-3-bootstrap-result","dir":"Articles","previous_headings":"Time to event analysis","what":"Report 3: Bootstrap result","title":"Using maicplus","text":"","code":"set.seed(1) HR_bootstraps <- boot(   data = ipd_centered,   statistic = bootstrap_HR,   centered_colnames = centered_colnames,   pseudo_ipd = pseudo_ipd,   model = Surv(TIME, EVENT == 1) ~ ARM,   ref_treat = \"B\",   R = 1000 ) # Median of the bootstrap samples HR_median <- median(HR_bootstraps$t)  # Bootstrap CI - Percentile CI boot_ci_HR <- boot.ci(boot.out = HR_bootstraps, index = 1, type = \"perc\")  # Bootstrap CI - BCa CI boot_ci_HR_BCA <- boot.ci(boot.out = HR_bootstraps, index = 1, type = \"bca\")  HR_median #> [1] 0.2858165 boot_ci_HR #> BOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS #> Based on 1000 bootstrap replicates #>  #> CALL :  #> boot.ci(boot.out = HR_bootstraps, type = \"perc\", index = 1) #>  #> Intervals :  #> Level     Percentile      #> 95%   ( 0.2236,  0.3689 )   #> Calculations and Intervals on Original Scale boot_ci_HR_BCA #> BOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS #> Based on 1000 bootstrap replicates #>  #> CALL :  #> boot.ci(boot.out = HR_bootstraps, type = \"bca\", index = 1) #>  #> Intervals :  #> Level       BCa           #> 95%   ( 0.2296,  0.3789 )   #> Calculations and Intervals on Original Scale"},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"report-4-diagnosis-plot","dir":"Articles","previous_headings":"Time to event analysis","what":"Report 4: Diagnosis Plot","title":"Using maicplus","text":"","code":"# grambsch & theaneu ph test coxdiag <- cox.zph(unweighted_cox, global = FALSE, transform = \"log\") coxdiag_adj <- cox.zph(weighted_cox, global = FALSE, transform = \"log\")  coxdiag #>       chisq df    p #> ARM 0.00996  1 0.92 par(mfrow = c(1, 1), tcl = -0.15) plot(coxdiag, yaxt = \"n\", main = \"Grambsch & Terneau Plot (before matching)\") axis(2, las = 1) coxdiag_adj #>      chisq df    p #> ARM 0.0438  1 0.83 par(mfrow = c(1, 1), tcl = -0.15) plot(coxdiag_adj, yaxt = \"n\", main = \"Grambsch & Terneau Plot (after matching)\") axis(2, las = 1) # log-cumulative hazard plot ph_diagplot_lch(kmobj,   time_scale = \"month\", log_time = TRUE,   endpoint_name = \"OS\", subtitle = \"(Before Matching)\" ) ph_diagplot_lch(kmobj_adj,   time_scale = \"month\", log_time = TRUE,   endpoint_name = \"OS\", subtitle = \"(After Matching)\" ) # schoenfeld residual plot ph_diagplot_schoenfeld(unweighted_cox,   time_scale = \"month\", log_time = TRUE,   endpoint_name = \"OS\", subtitle = \"(Before Matching)\" ) ph_diagplot_schoenfeld(weighted_cox,   time_scale = \"month\", log_time = TRUE,   endpoint_name = \"OS\", subtitle = \"(After Matching)\" )"},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"analysis-using-a-built-in-wrapper","dir":"Articles","previous_headings":"Time to event analysis","what":"Analysis using a built-in wrapper","title":"Using maicplus","text":"One can analysis wrapper","code":"# put in wrapper code"},{"path":"https://hta-pharma.github.io/maicplus/articles/using_maicplus.html","id":"binary-outcome-analysis-todo","dir":"Articles","previous_headings":"","what":"Binary outcome analysis (TODO)","title":"Using maicplus","text":"","code":"# Simulate response data based on the known proportion of responders comparator_prop_events <- 0.4  # Calculate number with event. Use round() to ensure we end up with a whole number of people. # number without an event = Total N - number with event to ensure we keep the same number of patients n_with_event <- round(agd$N * comparator_prop_events, digits = 0) comparator_binary <- data.frame(\"RESPONSE\" = c(rep(1, n_with_event), rep(0, agd$N - n_with_event))) comparator_binary$ARM <- \"B\" # need to specify ARM for comparator data ipd_matched <- weighted_data$data  combined_data_binary <- merge_two_data(comparator_binary, ipd_matched, internal_response_name = \"RESPONSE\")  unweighted_OR <- glm(   formula = RESPONSE ~ ARM,   family = binomial(link = \"logit\"),   data = combined_data_binary )  # Log odds ratio log_OR_CI <- cbind(coef(unweighted_OR), confint.default(unweighted_OR, level = 0.95))[2, ]  # Odds ratio OR_CI <- exp(log_OR_CI) names(OR_CI) <- c(\"OR\", \"OR_low_CI\", \"OR_upp_CI\") OR_CI  # Fit a logistic regression model with weights to estimate the weighted OR weighted_OR <- suppressWarnings(glm(   formula = RESPONSE ~ ARM,   family = binomial(link = \"logit\"),   data = combined_data_binary,   weight = weights ))  # Weighted log odds ratio log_OR_CI_wtd <- cbind(coef(weighted_OR), confint.default(weighted_OR, level = 0.95))[2, ]  # Weighted odds ratio OR_CI_wtd <- exp(log_OR_CI_wtd) names(OR_CI_wtd) <- c(\"OR\", \"OR_low_CI\", \"OR_upp_CI\") OR_CI_wtd  # Robust standard error if (requireNamespace(\"clubSandwich\")) {   vmod <- clubSandwich::vcovCR(weighted_OR, cluster = seq_len(dim(combined_data_binary)[1]), type = \"CR2\")   coef_res <- clubSandwich::conf_int(weighted_OR, vmod, coef = 2)    OR_CI_robust <- exp(with(coef_res, c(beta, CI_L, CI_U)))   names(OR_CI_robust) <- c(\"Estimate\", \"Lower 95% CI\", \"Upper 95% CI\")   OR_CI_robust } # Using sandwich package V.sw <- sandwich::vcovHC(weighted_OR) # white's estimator SD <- sqrt(V.sw[2, 2]) Estimate <- coef(weighted_OR)[2] OR_CI_robust2 <- exp(c(Estimate, Estimate - 1.96 * SD, Estimate + 1.96 * SD)) names(OR_CI_robust2) <- c(\"Estimate\", \"Lower 95% CI\", \"Upper 95% CI\") OR_CI_robust2"},{"path":"https://hta-pharma.github.io/maicplus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"hta-pharma. Author, maintainer.","code":""},{"path":"https://hta-pharma.github.io/maicplus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"hta-pharma (2024). maicplus: Matching Adjusted Indirect Comparison. R package version 0.1.0, https://github.com/hta-pharma/maicplus/.","code":"@Manual{,   title = {maicplus: Matching Adjusted Indirect Comparison},   author = {{hta-pharma}},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/hta-pharma/maicplus/}, }"},{"path":"https://hta-pharma.github.io/maicplus/index.html","id":"maicplus","dir":"","previous_headings":"","what":"Matching Adjusted Indirect Comparison","title":"Matching Adjusted Indirect Comparison","text":"open source R package MAIC","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/basic_kmplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Kaplan Meier (KM) plot function — basic_kmplot","title":"Basic Kaplan Meier (KM) plot function — basic_kmplot","text":"function can generate basic KM plot without risk set table appended bottom. single plot, can include 4 KM curves. depends number levels 'treatment' column input data.frame kmdat","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/basic_kmplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Kaplan Meier (KM) plot function — basic_kmplot","text":"","code":"basic_kmplot(   kmdat,   endpoint_name = \"Time to Event Endpoint\",   time_scale,   time_grid,   show_risk_set = TRUE,   main_title = \"Kaplan-Meier Curves\",   subplot_heights = NULL,   suppress_plot_layout = FALSE,   use_colors = NULL,   use_line_types = NULL,   use_pch_cex = 0.65,   use_pch_alpha = 100 )"},{"path":"https://hta-pharma.github.io/maicplus/reference/basic_kmplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Kaplan Meier (KM) plot function — basic_kmplot","text":"kmdat data.frame, must consist treatment, time (unit days), n.risk, censor, surv, similar output maicplus:::survfit_makeup endpoint_name string, name time event endpoint, show last line title time_scale string, time unit median survival time, taking value 'years', 'months', 'weeks' 'days' time_grid numeric vector unit time_scale, risk set table x axis km plot defined based time grid show_risk_set logical, show risk set table , TRUE default main_title string, main title KM plot subplot_heights numeric vector, heights argument graphic::layout(),NULL default means user use default setting suppress_plot_layout logical, suppress layout setting function user can specify layout outside function, FALSE default use_colors character vector length 4, colors KM curves, passed col lines() use_line_types numeric vector length 4, line type KM curves, passed lty lines() use_pch_cex scalar 0 1, point size indicate censored individuals KM curves, passed cex points() use_pch_alpha scalar 0 255, degree color transparency points indicate censored individuals KM curves, passed cex points()","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/basic_kmplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic Kaplan Meier (KM) plot function — basic_kmplot","text":"KM plot without risk set table appended bottom, 4 KM curves","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/basic_kmplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic Kaplan Meier (KM) plot function — basic_kmplot","text":"","code":"library(survival) load(system.file(\"extdata\", \"combined_data_tte.rda\", package = \"maicplus\", mustWork = TRUE)) kmobj <- survfit(Surv(TIME, EVENT) ~ ARM, combined_data_tte, conf.type = \"log-log\") kmdat <- do.call(rbind, survfit_makeup(kmobj)) kmdat$treatment <- factor(kmdat$treatment)  # without risk set table basic_kmplot(kmdat,   time_scale = \"month\",   time_grid = seq(0, 20, by = 2),   show_risk_set = FALSE,   main_title = \"Kaplan-Meier Curves\",   subplot_heights = NULL,   suppress_plot_layout = FALSE,   use_colors = NULL,   use_line_types = NULL )   # with risk set table basic_kmplot(kmdat,   time_scale = \"month\",   time_grid = seq(0, 20, by = 2),   show_risk_set = TRUE,   main_title = \"Kaplan-Meier Curves\",   subplot_heights = NULL,   suppress_plot_layout = FALSE,   use_colors = NULL,   use_line_types = NULL )"},{"path":"https://hta-pharma.github.io/maicplus/reference/basic_kmplot2.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Kaplan Meier (KM) plot function using ggplot — basic_kmplot2","title":"Basic Kaplan Meier (KM) plot function using ggplot — basic_kmplot2","text":"function generates basic KM plot using ggplot.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/basic_kmplot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Kaplan Meier (KM) plot function using ggplot — basic_kmplot2","text":"","code":"basic_kmplot2(   kmlist,   kmlist_name,   endpoint_name = \"Time to Event Endpoint\",   show_risk_set = TRUE,   main_title = \"Kaplan-Meier Curves\",   break_x_by = NULL,   censor = TRUE,   xlim = NULL,   use_colors = NULL,   use_line_types = NULL )"},{"path":"https://hta-pharma.github.io/maicplus/reference/basic_kmplot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Kaplan Meier (KM) plot function using ggplot — basic_kmplot2","text":"kmlist list survfit object kmlist_name vector indicating treatment names survfit object endpoint_name string, name time event endpoint, show last line title show_risk_set logical, show risk set table , TRUE default main_title string, main title KM plot break_x_by bin parameter survminer censor indicator include censor information xlim x limit x-axis plot use_colors character vector length 4, colors KM curves, passed 'col' lines() use_line_types numeric vector length 4, line type KM curves, passed lty lines()","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/bootstrap_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapping weighted hazard ratios to obtain confidence interval — bootstrap_HR","title":"Bootstrapping weighted hazard ratios to obtain confidence interval — bootstrap_HR","text":"function uses boot resample internal IPD data obtain bootstrapped hazard ratio values used form confidence interval. Note due lack full IPD covariates aggregate data, pseudo IPD bootstrapped.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/bootstrap_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapping weighted hazard ratios to obtain confidence interval — bootstrap_HR","text":"","code":"bootstrap_HR(   ipd_centered,   i,   centered_colnames,   pseudo_ipd = NULL,   model,   min_weight = 1e-04,   ref_treat = NULL )"},{"path":"https://hta-pharma.github.io/maicplus/reference/bootstrap_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapping weighted hazard ratios to obtain confidence interval — bootstrap_HR","text":"ipd_centered data frame containing individual patient data internal IPD study. data frame already centered using center_ipd function Index used select sample within boot. centered_colnames character vector giving names covariates use matching. names must match column names internal dataset. pseudo_ipd data frame containing pseudo individual patient data comparator study needed derive relative treatment effect. Pseudo IPD used unanchored case. pseudo_ipd time, event, ARM variable name order ipd_centered model Survival model run calculate HR correct time, event, #'   ARM names min_weight numeric value defines minimum weight allowed. value (default 0.0001) replace weights estimated 0 sample. ref_treat Reference treatment survival model","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/bootstrap_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapping weighted hazard ratios to obtain confidence interval — bootstrap_HR","text":"HR bootstraps","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/bootstrap_HR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrapping weighted hazard ratios to obtain confidence interval — bootstrap_HR","text":"","code":"# Unanchored example load(system.file(\"extdata\", \"ipd.rda\", package = \"maicplus\", mustWork = TRUE)) load(system.file(\"extdata\", \"agd.rda\", package = \"maicplus\", mustWork = TRUE)) ipd_centered <- center_ipd(ipd = ipd, agd = agd)  pseudo_ipd <- read.csv(   system.file(\"extdata\", \"psuedo_IPD.csv\", package = \"maicplus\", mustWork = TRUE) ) pseudo_ipd$ARM <- \"B\" # Need to specify ARM for pseudo ipd  # Need to ensure pseudo_ipd and ipd_matched have same names colnames(pseudo_ipd) <- c(\"TIME\", \"EVENT\", \"ARM\") if (FALSE) { HR_bootstraps <- boot(   data = ipd_centered,   statistic = bootstrap_HR,   centered_colnames = centered_colnames,   pseudo_ipd = pseudo_ipd,   model = Surv(TIME, EVENT == 1) ~ ARM,   ref_treat = \"B\",   R = 1000 ) }"},{"path":"https://hta-pharma.github.io/maicplus/reference/bucher.html","id":null,"dir":"Reference","previous_headings":"","what":"Bucher method for combining treatment effects — bucher","title":"Bucher method for combining treatment effects — bucher","text":"Given two treatment effects vs. C B vs. C derive treatment effects vs. B using Bucher method. Two-sided confidence interval Z-test p-value also calculated. Treatment effects standard errors log scale hazard ratio, odds ratio, risk ratio. Treatment effects standard errors natural scale risk difference mean difference.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/bucher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bucher method for combining treatment effects — bucher","text":"","code":"bucher(trt, com, conf_lv = 0.95)  # S3 method for maicplus_bucher print(x, ci_digits = 2, pval_digits = 3, exponentiate = FALSE, ...)"},{"path":"https://hta-pharma.github.io/maicplus/reference/bucher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bucher method for combining treatment effects — bucher","text":"trt list two scalars study experimental arm. 'est' point estimate 'se' standard error treatment effect. time--event data, 'est' 'se' point estimate standard error log hazard ratio. binary data, 'est' 'se' point estimate standard error log odds ratio, log risk ratio, risk difference. continuous data,  'est' 'se' point estimate standard error mean difference. com trt, study control arm conf_lv numerical scalar, prescribe confidence level derive two-sided confidence interval treatment effect x maicplus_bucher object ci_digits integer, number decimal places point estimate derived confidence limits pval_digits integer, number decimal places display Z-test p-value exponentiate whether treatment effect confidence interval exponentiated. applies relative treatment effects. Default set false. ... used","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/bucher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bucher method for combining treatment effects — bucher","text":"list 5 elements, est scalar, point estimate treatment effect se scalar, standard error treatment effect ci_l scalar, lower confidence limit two-sided CI prescribed nominal level conf_lv ci_u scalar, upper confidence limit two-sided CI prescribed nominal level conf_lv pval p-value Z-test, null hypothesis est zero","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/bucher.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Bucher method for combining treatment effects — bucher","text":"print(maicplus_bucher): Print method maicplus_bucher objects","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/bucher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bucher method for combining treatment effects — bucher","text":"","code":"trt <- list(est = log(1.1), se = 0.2) com <- list(est = log(1.3), se = 0.18) result <- bucher(trt, com, conf_lv = 0.9) print(result, ci_digits = 3, pval_digits = 3) #>                   result                   pvalue  #> \"-0.167 [-0.610; 0.276]\"                  \"0.535\""},{"path":"https://hta-pharma.github.io/maicplus/reference/calculate_weights_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Statistics for Weight Plot Legend — calculate_weights_legend","title":"Calculate Statistics for Weight Plot Legend — calculate_weights_legend","text":"Calculates ESS reduction median weights used create legend weights plot","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/calculate_weights_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Statistics for Weight Plot Legend — calculate_weights_legend","text":"","code":"calculate_weights_legend(weighted_data)"},{"path":"https://hta-pharma.github.io/maicplus/reference/calculate_weights_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Statistics for Weight Plot Legend — calculate_weights_legend","text":"weighted_data object returned calculating weights using estimate_weights","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/calculate_weights_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Statistics for Weight Plot Legend — calculate_weights_legend","text":"list ESS, ESS reduction, median value scaled unscaled weights, missing count","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/calculate_weights_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Statistics for Weight Plot Legend — calculate_weights_legend","text":"","code":"if (FALSE) { load(system.file(\"extdata\", \"weighted_data.rda\", package = \"maicplus\", mustWork = TRUE)) calculate_weights_legend(weighted_data) }"},{"path":"https://hta-pharma.github.io/maicplus/reference/center_ipd.html","id":null,"dir":"Reference","previous_headings":"","what":"Center individual patient data (IPD) variables using aggregate data averages — center_ipd","title":"Center individual patient data (IPD) variables using aggregate data averages — center_ipd","text":"function subtracts IPD variables (prognostic variables /effect modifiers) aggregate data averages. centering needed order calculate weights. IPD aggregate data variable names match.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/center_ipd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center individual patient data (IPD) variables using aggregate data averages — center_ipd","text":"","code":"center_ipd(ipd, agd)"},{"path":"https://hta-pharma.github.io/maicplus/reference/center_ipd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center individual patient data (IPD) variables using aggregate data averages — center_ipd","text":"ipd IPD variable names match aggregate data names without suffix. involve either changing aggregate data name ipd name. instance, binarize SEX variable MALE reference using dummize_ipd, function names new variable SEX_MALE. case, SEX_MALE also available aggregate data. agd pre-processed aggregate data contain STUDY, ARM, N. Variable names followed legal suffixes (.e. MEAN, MEDIAN, SD, PROP). Note COUNT suffix longer accepted.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/center_ipd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center individual patient data (IPD) variables using aggregate data averages — center_ipd","text":"centered ipd using aggregate level data averages","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/center_ipd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Center individual patient data (IPD) variables using aggregate data averages — center_ipd","text":"","code":"# load in IPD adsl <- read.csv(system.file(\"extdata\", \"adsl.csv\", package = \"maicplus\", mustWork = TRUE)) adsl <- dummize_ipd(adsl, dummize_cols = c(\"SEX\"), dummize_ref_level = c(\"Female\"))  # Reading aggregate data by Excel target_pop <- read.csv(   system.file(\"extdata\", \"aggregate_data_example_1.csv\", package = \"maicplus\", mustWork = TRUE) ) agd <- process_agd(target_pop)  # Alternatively, you can specify aggregate data manually in data frame load(system.file(\"extdata\", \"agd.rda\", package = \"maicplus\", mustWork = TRUE)) ipd_centered <- center_ipd(ipd = adsl, agd = agd)"},{"path":"https://hta-pharma.github.io/maicplus/reference/check_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see if weights are optimized correctly — check_weights","title":"Check to see if weights are optimized correctly — check_weights","text":"function checks see optimization done properly checking covariate averages adjustment.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/check_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see if weights are optimized correctly — check_weights","text":"","code":"check_weights(weighted_data, processed_agd)  # S3 method for maicplus_check_weights print(   x,   mean_digits = 2,   prop_digits = 2,   sd_digits = 3,   digits = getOption(\"digits\"),   ... )"},{"path":"https://hta-pharma.github.io/maicplus/reference/check_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to see if weights are optimized correctly — check_weights","text":"weighted_data object returned calculating weights using estimate_weights processed_agd data frame, object returned using process_agd aggregated data following naming convention x object check_weights mean_digits number digits rounding mean columns output prop_digits number digits rounding proportion columns output sd_digits number digits rounding mean columns output digits minimal number significant digits, see print.default. ... arguments print.data.frame","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/check_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check to see if weights are optimized correctly — check_weights","text":"data.frame weighted unweighted covariate averages IPD, average aggregate data, sum inner products covariate \\(x_i\\) weights (\\(exp(x_i\\beta)\\))","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/check_weights.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Check to see if weights are optimized correctly — check_weights","text":"print(maicplus_check_weights): Print method check_weights objects","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/check_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check to see if weights are optimized correctly — check_weights","text":"","code":"load(system.file(\"extdata\", \"weighted_data.rda\", package = \"maicplus\", mustWork = TRUE)) load(system.file(\"extdata\", \"agd.rda\", package = \"maicplus\", mustWork = TRUE)) check_weights(weighted_data, agd) #>   covariate match_stat internal_trial internal_trial_after_weighted #> 1       AGE       Mean         59.850                         51.00 #> 2       AGE         SD          9.011                          3.25 #> 3  SEX_MALE       Prop          0.380                          0.49 #> 4     ECOG0       Prop          0.410                          0.40 #> 5     SMOKE       Prop          0.320                          0.20 #> 6 N_PR_THER     Median          3.000                          2.00 #>   external_trial sum_centered_IPD_with_weights #> 1          51.00                        0.0001 #> 2           3.25                        0.0125 #> 3           0.49                        0.0000 #> 4           0.40                        0.0000 #> 5           0.20                        0.0000 #> 6           2.00                        0.0000"},{"path":"https://hta-pharma.github.io/maicplus/reference/complete_agd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate pooled arm statistics in Aggregated Data (AgD) based on arm-specific statistics — complete_agd","title":"Calculate pooled arm statistics in Aggregated Data (AgD) based on arm-specific statistics — complete_agd","text":"convenient function pool arm statistics. function called within process_agd ARM equal \"Total\". Note pooled median calculated approximation.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/complete_agd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate pooled arm statistics in Aggregated Data (AgD) based on arm-specific statistics — complete_agd","text":"","code":"complete_agd(use_agd)"},{"path":"https://hta-pharma.github.io/maicplus/reference/complete_agd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate pooled arm statistics in Aggregated Data (AgD) based on arm-specific statistics — complete_agd","text":"use_agd aggregated data processed within process_agd","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/complete_agd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate pooled arm statistics in Aggregated Data (AgD) based on arm-specific statistics — complete_agd","text":"Complete N, count, mean, sd, median pooled arm","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/dummize_ipd.html","id":null,"dir":"Reference","previous_headings":"","what":"Create dummy variables from categorical variables in an individual patient data (ipd) — dummize_ipd","title":"Create dummy variables from categorical variables in an individual patient data (ipd) — dummize_ipd","text":"convenient function convert categorical variables dummy binary variables. especially useful variable two factors. Note original variable kept variable dummized.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/dummize_ipd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create dummy variables from categorical variables in an individual patient data (ipd) — dummize_ipd","text":"","code":"dummize_ipd(raw_ipd, dummize_cols, dummize_ref_level)"},{"path":"https://hta-pharma.github.io/maicplus/reference/dummize_ipd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create dummy variables from categorical variables in an individual patient data (ipd) — dummize_ipd","text":"raw_ipd ipd data contains variable dummize dummize_cols vector column names binarize dummize_ref_level vector reference level variables binarize","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/dummize_ipd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create dummy variables from categorical variables in an individual patient data (ipd) — dummize_ipd","text":"ipd dummized columns","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/dummize_ipd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create dummy variables from categorical variables in an individual patient data (ipd) — dummize_ipd","text":"","code":"adsl <- read.csv(system.file(\"extdata\", \"adsl.csv\", package = \"maicplus\", mustWork = TRUE)) adsl <- dummize_ipd(adsl, dummize_cols = c(\"SEX\"), dummize_ref_level = c(\"Female\"))"},{"path":"https://hta-pharma.github.io/maicplus/reference/ess_footnote_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Note on Expected Sample Size Reduction — ess_footnote_text","title":"Note on Expected Sample Size Reduction — ess_footnote_text","text":"Note Expected Sample Size Reduction","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ess_footnote_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Note on Expected Sample Size Reduction — ess_footnote_text","text":"","code":"ess_footnote_text(width = 0.9 * getOption(\"width\"))"},{"path":"https://hta-pharma.github.io/maicplus/reference/ess_footnote_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Note on Expected Sample Size Reduction — ess_footnote_text","text":"width Number characters break string new lines (\\n).","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ess_footnote_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Note on Expected Sample Size Reduction — ess_footnote_text","text":"character string","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/estimate_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive individual weights in the matching step of MAIC — estimate_weights","title":"Derive individual weights in the matching step of MAIC — estimate_weights","text":"Assuming data properly processed, function takes individual patient data (IPD) centered covariates (effect modifiers /prognostic variables) input, generates weights individual IPD trial match covariates aggregate data. plot function displays individuals weights key summary top right legend includes median weight, effective sample size (ESS), reduction percentage (percent ESS reduced original sample size). two options plotting: base R plot ggplot. default base R plot plot unscaled scaled separately. default ggplot plot unscaled scaled weights plot.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/estimate_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive individual weights in the matching step of MAIC — estimate_weights","text":"","code":"estimate_weights(   data,   centered_colnames = NULL,   start_val = 0,   method = \"BFGS\",   n_boot_iteration = NULL,   set_seed_boot = 1234,   ... )  # S3 method for maicplus_estimate_weights plot(   x,   ggplot = FALSE,   bin_col = \"#6ECEB2\",   vline_col = \"#688CE8\",   main_title = NULL,   scaled_weights = TRUE,   bins = 50,   ... )"},{"path":"https://hta-pharma.github.io/maicplus/reference/estimate_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive individual weights in the matching step of MAIC — estimate_weights","text":"data numeric matrix, centered covariates IPD, missing value cell allowed centered_colnames character numeric vector (column indicators) centered covariates start_val scalar, starting value coefficients propensity score regression method string, name optimization algorithm (see 'method' argument base::optim()) default \"BFGS\", options \"Nelder-Mead\", \"CG\", \"L-BFGS-B\", \"SANN\", \"Brent\" n_boot_iteration integer, number bootstrap iterations. default NULL means bootstrapping procedure triggered, hence element \"boot\" output list object NULL. set_seed_boot scalar, random seed conducting bootstrapping, relevant n_boot_iteration NULL. default, use seed 1234 ... Additional control parameters passed stats::optim. x object estimate_weights ggplot indicator print base weights plot ggplot weights plot bin_col string, color bins histogram vline_col string, color vertical line histogram main_title title plot. ggplot, name scaled weights plot unscaled weights plot, respectively. scaled_weights (base plot ) indicator using scaled weights instead regular weights bins (ggplot ) number bin parameter use","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/estimate_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive individual weights in the matching step of MAIC — estimate_weights","text":"list following 4 elements, data data.frame, includes input data appended column 'weights' 'scaled_weights'. Scaled weights summation number rows data missing value effect modifiers centered_colnames column names centered effect modifiers data nr_missing number rows data least 1 missing value specified centered effect modifiers ess effective sample size, square sum divided sum squares opt R object returned base::optim(), assess convergence details boot n 2 k array NA, n equals number rows data, k equals n_boot_iteration. 2 columns second dimension include column numeric indexes rows data selected bootstrapping iteration column weights. boot NA argument n_boot_iteration set NULL","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/estimate_weights.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Derive individual weights in the matching step of MAIC — estimate_weights","text":"plot(maicplus_estimate_weights): Plot method estimate_weights objects","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/estimate_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derive individual weights in the matching step of MAIC — estimate_weights","text":"","code":"load(system.file(\"extdata\", \"ipd.rda\", package = \"maicplus\", mustWork = TRUE)) load(system.file(\"extdata\", \"agd.rda\", package = \"maicplus\", mustWork = TRUE)) ipd_centered <- center_ipd(ipd = ipd, agd = agd)  centered_colnames <- c(\"AGE\", \"AGE_SQUARED\", \"SEX_MALE\", \"ECOG0\", \"SMOKE\", \"N_PR_THER_MEDIAN\") centered_colnames <- paste0(centered_colnames, \"_CENTERED\") weighted_data <- estimate_weights(data = ipd_centered, centered_colnames = centered_colnames)  load(system.file(\"extdata\", \"weighted_data.rda\", package = \"maicplus\", mustWork = TRUE)) plot(weighted_data)   library(ggplot2) plot(weighted_data, ggplot = TRUE)"},{"path":"https://hta-pharma.github.io/maicplus/reference/ext_tte_transfer.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function: transform TTE ADaM data to suitable input for survival R package — ext_tte_transfer","title":"helper function: transform TTE ADaM data to suitable input for survival R package — ext_tte_transfer","text":"helper function: transform TTE ADaM data suitable input survival R package","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ext_tte_transfer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function: transform TTE ADaM data to suitable input for survival R package — ext_tte_transfer","text":"","code":"ext_tte_transfer(dd, time_scale = \"months\", trt = NULL)"},{"path":"https://hta-pharma.github.io/maicplus/reference/ext_tte_transfer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function: transform TTE ADaM data to suitable input for survival R package — ext_tte_transfer","text":"dd data frame, ADTTE read via haven::read_sas time_scale character string, 'years', 'months', 'weeks' 'days', time unit median survival time trt values include treatment column","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ext_tte_transfer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function: transform TTE ADaM data to suitable input for survival R package — ext_tte_transfer","text":"data frame can used input survival::Surv","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/find_SE_from_CI.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate standard error from the reported confidence interval. — find_SE_from_CI","title":"Calculate standard error from the reported confidence interval. — find_SE_from_CI","text":"Comparator studies often report confidence interval treatment effects. function calculates standard error treatment effect given reported confidence interval. relative treatment effect (.e. hazard ratio, odds ratio, risk ratio), function log confidence interval. risk difference mean difference, log confidence interval. option log confidence interval controlled 'logged' parameter.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/find_SE_from_CI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate standard error from the reported confidence interval. — find_SE_from_CI","text":"","code":"find_SE_from_CI(   CI_lower = NULL,   CI_upper = NULL,   CI_perc = 0.95,   logged = TRUE )"},{"path":"https://hta-pharma.github.io/maicplus/reference/find_SE_from_CI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate standard error from the reported confidence interval. — find_SE_from_CI","text":"CI_lower Reported lower percentile value treatment effect CI_upper Reported upper percentile value treatment effect CI_perc Percentage confidence interval reported logged Whether confidence interval logged. relative treatment effect, log applied estimated log treatment effect approximately normally distributed.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/find_SE_from_CI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate standard error from the reported confidence interval. — find_SE_from_CI","text":"Standard error log relative treatment effect 'logged' true standard error treatment effect 'logged' false","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/find_SE_from_CI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate standard error from the reported confidence interval. — find_SE_from_CI","text":"","code":"find_SE_from_CI(CI_lower = 0.55, CI_upper = 0.90, CI_perc = 0.95) #> [1] 0.1256341"},{"path":"https://hta-pharma.github.io/maicplus/reference/generate_survival_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate time-to-event data — generate_survival_data","title":"Generate time-to-event data — generate_survival_data","text":"Function generates time--event data. follow data-generating mechanism Bender et al. Remiro-Azocar et al. 2021 simulate Weibull-distributed survival times proportional hazards parameterization. per Remiro-Azocar et al, set default scale parameter (lambda) 8.5 shape parameter (nu) 1.3 reflect frequently observed mortality trends metastatic cancer patients. Censoring times generated exponential distribution rate parameter 0.96 selected achieve censoring rate 35% active treatment baseline (values covariates set zero).","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/generate_survival_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate time-to-event data — generate_survival_data","text":"","code":"generate_survival_data(   N = 150,   ncov = 4,   lambda = 8.5,   nu = 1.3,   censor_rate = 0.96,   cor = 0.35,   marginal_mean = 0.6,   marginal_sd = 0.2,   beta = rep(-log(0.67), ncov),   gamma = sort(rep(c(0, -log(0.67)), length = ncov)),   d0 = log(0.25),   seed = 1 )"},{"path":"https://hta-pharma.github.io/maicplus/reference/generate_survival_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate time-to-event data — generate_survival_data","text":"N sample size ncov number covariates generate lambda scale parameter baseline hazard function nu shape parameter baseline hazard function censor_rate rate parameter exponential distribution censoring times cor correlation covariates marginal_mean marginal mean covariates marginal_sd marginal standard deviation covariates beta vector coefficients prognostic factors. Defaults -log(0.67) covariates. gamma vector coefficients effect modifiers. Default 0 half covariates -log(0.67) others. d0 coefficient treatment effect patients treat = 0 seed seed used simulation reproducibility","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/generate_survival_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate time-to-event data — generate_survival_data","text":"data.frame survival time, censor (event) status, treatment indicator, covariates","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/generate_survival_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate time-to-event data — generate_survival_data","text":"Remiro-Azocar et al. 2021","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/get_pseudo_ipd_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create pseudo IPD given aggregated binary data — get_pseudo_ipd_binary","title":"Create pseudo IPD given aggregated binary data — get_pseudo_ipd_binary","text":"Create pseudo IPD given aggregated binary data","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/get_pseudo_ipd_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create pseudo IPD given aggregated binary data — get_pseudo_ipd_binary","text":"","code":"get_pseudo_ipd_binary(binary_agd, format = c(\"stacked\", \"unstacked\"))"},{"path":"https://hta-pharma.github.io/maicplus/reference/get_pseudo_ipd_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create pseudo IPD given aggregated binary data — get_pseudo_ipd_binary","text":"binary_agd data.frame take different formats depending format format string, \"stacked\" \"unstacked\"","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/get_pseudo_ipd_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create pseudo IPD given aggregated binary data — get_pseudo_ipd_binary","text":"data.frame pseudo binary IPD, columns USUBJID, ARM, RESPONSE","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/get_pseudo_ipd_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create pseudo IPD given aggregated binary data — get_pseudo_ipd_binary","text":"","code":"# example of unstacked testdat <- data.frame(Yes = 280, No = 120) rownames(testdat) <- \"B\" get_pseudo_ipd_binary(   binary_agd = testdat,   format = \"unstacked\" ) #>                    USUBJID ARM RESPONSE #> 1     pseudo_binary_subj_1   B     TRUE #> 2     pseudo_binary_subj_2   B     TRUE #> 3     pseudo_binary_subj_3   B     TRUE #> 4     pseudo_binary_subj_4   B     TRUE #> 5     pseudo_binary_subj_5   B     TRUE #> 6     pseudo_binary_subj_6   B     TRUE #> 7     pseudo_binary_subj_7   B     TRUE #> 8     pseudo_binary_subj_8   B     TRUE #> 9     pseudo_binary_subj_9   B     TRUE #> 10   pseudo_binary_subj_10   B     TRUE #> 11   pseudo_binary_subj_11   B     TRUE #> 12   pseudo_binary_subj_12   B     TRUE #> 13   pseudo_binary_subj_13   B     TRUE #> 14   pseudo_binary_subj_14   B     TRUE #> 15   pseudo_binary_subj_15   B     TRUE #> 16   pseudo_binary_subj_16   B     TRUE #> 17   pseudo_binary_subj_17   B     TRUE #> 18   pseudo_binary_subj_18   B     TRUE #> 19   pseudo_binary_subj_19   B     TRUE #> 20   pseudo_binary_subj_20   B     TRUE #> 21   pseudo_binary_subj_21   B     TRUE #> 22   pseudo_binary_subj_22   B     TRUE #> 23   pseudo_binary_subj_23   B     TRUE #> 24   pseudo_binary_subj_24   B     TRUE #> 25   pseudo_binary_subj_25   B     TRUE #> 26   pseudo_binary_subj_26   B     TRUE #> 27   pseudo_binary_subj_27   B     TRUE #> 28   pseudo_binary_subj_28   B     TRUE #> 29   pseudo_binary_subj_29   B     TRUE #> 30   pseudo_binary_subj_30   B     TRUE #> 31   pseudo_binary_subj_31   B     TRUE #> 32   pseudo_binary_subj_32   B     TRUE #> 33   pseudo_binary_subj_33   B     TRUE #> 34   pseudo_binary_subj_34   B     TRUE #> 35   pseudo_binary_subj_35   B     TRUE #> 36   pseudo_binary_subj_36   B     TRUE #> 37   pseudo_binary_subj_37   B     TRUE #> 38   pseudo_binary_subj_38   B     TRUE #> 39   pseudo_binary_subj_39   B     TRUE #> 40   pseudo_binary_subj_40   B     TRUE #> 41   pseudo_binary_subj_41   B     TRUE #> 42   pseudo_binary_subj_42   B     TRUE #> 43   pseudo_binary_subj_43   B     TRUE #> 44   pseudo_binary_subj_44   B     TRUE #> 45   pseudo_binary_subj_45   B     TRUE #> 46   pseudo_binary_subj_46   B     TRUE #> 47   pseudo_binary_subj_47   B     TRUE #> 48   pseudo_binary_subj_48   B     TRUE #> 49   pseudo_binary_subj_49   B     TRUE #> 50   pseudo_binary_subj_50   B     TRUE #> 51   pseudo_binary_subj_51   B     TRUE #> 52   pseudo_binary_subj_52   B     TRUE #> 53   pseudo_binary_subj_53   B     TRUE #> 54   pseudo_binary_subj_54   B     TRUE #> 55   pseudo_binary_subj_55   B     TRUE #> 56   pseudo_binary_subj_56   B     TRUE #> 57   pseudo_binary_subj_57   B     TRUE #> 58   pseudo_binary_subj_58   B     TRUE #> 59   pseudo_binary_subj_59   B     TRUE #> 60   pseudo_binary_subj_60   B     TRUE #> 61   pseudo_binary_subj_61   B     TRUE #> 62   pseudo_binary_subj_62   B     TRUE #> 63   pseudo_binary_subj_63   B     TRUE #> 64   pseudo_binary_subj_64   B     TRUE #> 65   pseudo_binary_subj_65   B     TRUE #> 66   pseudo_binary_subj_66   B     TRUE #> 67   pseudo_binary_subj_67   B     TRUE #> 68   pseudo_binary_subj_68   B     TRUE #> 69   pseudo_binary_subj_69   B     TRUE #> 70   pseudo_binary_subj_70   B     TRUE #> 71   pseudo_binary_subj_71   B     TRUE #> 72   pseudo_binary_subj_72   B     TRUE #> 73   pseudo_binary_subj_73   B     TRUE #> 74   pseudo_binary_subj_74   B     TRUE #> 75   pseudo_binary_subj_75   B     TRUE #> 76   pseudo_binary_subj_76   B     TRUE #> 77   pseudo_binary_subj_77   B     TRUE #> 78   pseudo_binary_subj_78   B     TRUE #> 79   pseudo_binary_subj_79   B     TRUE #> 80   pseudo_binary_subj_80   B     TRUE #> 81   pseudo_binary_subj_81   B     TRUE #> 82   pseudo_binary_subj_82   B     TRUE #> 83   pseudo_binary_subj_83   B     TRUE #> 84   pseudo_binary_subj_84   B     TRUE #> 85   pseudo_binary_subj_85   B     TRUE #> 86   pseudo_binary_subj_86   B     TRUE #> 87   pseudo_binary_subj_87   B     TRUE #> 88   pseudo_binary_subj_88   B     TRUE #> 89   pseudo_binary_subj_89   B     TRUE #> 90   pseudo_binary_subj_90   B     TRUE #> 91   pseudo_binary_subj_91   B     TRUE #> 92   pseudo_binary_subj_92   B     TRUE #> 93   pseudo_binary_subj_93   B     TRUE #> 94   pseudo_binary_subj_94   B     TRUE #> 95   pseudo_binary_subj_95   B     TRUE #> 96   pseudo_binary_subj_96   B     TRUE #> 97   pseudo_binary_subj_97   B     TRUE #> 98   pseudo_binary_subj_98   B     TRUE #> 99   pseudo_binary_subj_99   B     TRUE #> 100 pseudo_binary_subj_100   B     TRUE #> 101 pseudo_binary_subj_101   B     TRUE #> 102 pseudo_binary_subj_102   B     TRUE #> 103 pseudo_binary_subj_103   B     TRUE #> 104 pseudo_binary_subj_104   B     TRUE #> 105 pseudo_binary_subj_105   B     TRUE #> 106 pseudo_binary_subj_106   B     TRUE #> 107 pseudo_binary_subj_107   B     TRUE #> 108 pseudo_binary_subj_108   B     TRUE #> 109 pseudo_binary_subj_109   B     TRUE #> 110 pseudo_binary_subj_110   B     TRUE #> 111 pseudo_binary_subj_111   B     TRUE #> 112 pseudo_binary_subj_112   B     TRUE #> 113 pseudo_binary_subj_113   B     TRUE #> 114 pseudo_binary_subj_114   B     TRUE #> 115 pseudo_binary_subj_115   B     TRUE #> 116 pseudo_binary_subj_116   B     TRUE #> 117 pseudo_binary_subj_117   B     TRUE #> 118 pseudo_binary_subj_118   B     TRUE #> 119 pseudo_binary_subj_119   B     TRUE #> 120 pseudo_binary_subj_120   B     TRUE #> 121 pseudo_binary_subj_121   B     TRUE #> 122 pseudo_binary_subj_122   B     TRUE #> 123 pseudo_binary_subj_123   B     TRUE #> 124 pseudo_binary_subj_124   B     TRUE #> 125 pseudo_binary_subj_125   B     TRUE #> 126 pseudo_binary_subj_126   B     TRUE #> 127 pseudo_binary_subj_127   B     TRUE #> 128 pseudo_binary_subj_128   B     TRUE #> 129 pseudo_binary_subj_129   B     TRUE #> 130 pseudo_binary_subj_130   B     TRUE #> 131 pseudo_binary_subj_131   B     TRUE #> 132 pseudo_binary_subj_132   B     TRUE #> 133 pseudo_binary_subj_133   B     TRUE #> 134 pseudo_binary_subj_134   B     TRUE #> 135 pseudo_binary_subj_135   B     TRUE #> 136 pseudo_binary_subj_136   B     TRUE #> 137 pseudo_binary_subj_137   B     TRUE #> 138 pseudo_binary_subj_138   B     TRUE #> 139 pseudo_binary_subj_139   B     TRUE #> 140 pseudo_binary_subj_140   B     TRUE #> 141 pseudo_binary_subj_141   B     TRUE #> 142 pseudo_binary_subj_142   B     TRUE #> 143 pseudo_binary_subj_143   B     TRUE #> 144 pseudo_binary_subj_144   B     TRUE #> 145 pseudo_binary_subj_145   B     TRUE #> 146 pseudo_binary_subj_146   B     TRUE #> 147 pseudo_binary_subj_147   B     TRUE #> 148 pseudo_binary_subj_148   B     TRUE #> 149 pseudo_binary_subj_149   B     TRUE #> 150 pseudo_binary_subj_150   B     TRUE #> 151 pseudo_binary_subj_151   B     TRUE #> 152 pseudo_binary_subj_152   B     TRUE #> 153 pseudo_binary_subj_153   B     TRUE #> 154 pseudo_binary_subj_154   B     TRUE #> 155 pseudo_binary_subj_155   B     TRUE #> 156 pseudo_binary_subj_156   B     TRUE #> 157 pseudo_binary_subj_157   B     TRUE #> 158 pseudo_binary_subj_158   B     TRUE #> 159 pseudo_binary_subj_159   B     TRUE #> 160 pseudo_binary_subj_160   B     TRUE #> 161 pseudo_binary_subj_161   B     TRUE #> 162 pseudo_binary_subj_162   B     TRUE #> 163 pseudo_binary_subj_163   B     TRUE #> 164 pseudo_binary_subj_164   B     TRUE #> 165 pseudo_binary_subj_165   B     TRUE #> 166 pseudo_binary_subj_166   B     TRUE #> 167 pseudo_binary_subj_167   B     TRUE #> 168 pseudo_binary_subj_168   B     TRUE #> 169 pseudo_binary_subj_169   B     TRUE #> 170 pseudo_binary_subj_170   B     TRUE #> 171 pseudo_binary_subj_171   B     TRUE #> 172 pseudo_binary_subj_172   B     TRUE #> 173 pseudo_binary_subj_173   B     TRUE #> 174 pseudo_binary_subj_174   B     TRUE #> 175 pseudo_binary_subj_175   B     TRUE #> 176 pseudo_binary_subj_176   B     TRUE #> 177 pseudo_binary_subj_177   B     TRUE #> 178 pseudo_binary_subj_178   B     TRUE #> 179 pseudo_binary_subj_179   B     TRUE #> 180 pseudo_binary_subj_180   B     TRUE #> 181 pseudo_binary_subj_181   B     TRUE #> 182 pseudo_binary_subj_182   B     TRUE #> 183 pseudo_binary_subj_183   B     TRUE #> 184 pseudo_binary_subj_184   B     TRUE #> 185 pseudo_binary_subj_185   B     TRUE #> 186 pseudo_binary_subj_186   B     TRUE #> 187 pseudo_binary_subj_187   B     TRUE #> 188 pseudo_binary_subj_188   B     TRUE #> 189 pseudo_binary_subj_189   B     TRUE #> 190 pseudo_binary_subj_190   B     TRUE #> 191 pseudo_binary_subj_191   B     TRUE #> 192 pseudo_binary_subj_192   B     TRUE #> 193 pseudo_binary_subj_193   B     TRUE #> 194 pseudo_binary_subj_194   B     TRUE #> 195 pseudo_binary_subj_195   B     TRUE #> 196 pseudo_binary_subj_196   B     TRUE #> 197 pseudo_binary_subj_197   B     TRUE #> 198 pseudo_binary_subj_198   B     TRUE #> 199 pseudo_binary_subj_199   B     TRUE #> 200 pseudo_binary_subj_200   B     TRUE #> 201 pseudo_binary_subj_201   B     TRUE #> 202 pseudo_binary_subj_202   B     TRUE #> 203 pseudo_binary_subj_203   B     TRUE #> 204 pseudo_binary_subj_204   B     TRUE #> 205 pseudo_binary_subj_205   B     TRUE #> 206 pseudo_binary_subj_206   B     TRUE #> 207 pseudo_binary_subj_207   B     TRUE #> 208 pseudo_binary_subj_208   B     TRUE #> 209 pseudo_binary_subj_209   B     TRUE #> 210 pseudo_binary_subj_210   B     TRUE #> 211 pseudo_binary_subj_211   B     TRUE #> 212 pseudo_binary_subj_212   B     TRUE #> 213 pseudo_binary_subj_213   B     TRUE #> 214 pseudo_binary_subj_214   B     TRUE #> 215 pseudo_binary_subj_215   B     TRUE #> 216 pseudo_binary_subj_216   B     TRUE #> 217 pseudo_binary_subj_217   B     TRUE #> 218 pseudo_binary_subj_218   B     TRUE #> 219 pseudo_binary_subj_219   B     TRUE #> 220 pseudo_binary_subj_220   B     TRUE #> 221 pseudo_binary_subj_221   B     TRUE #> 222 pseudo_binary_subj_222   B     TRUE #> 223 pseudo_binary_subj_223   B     TRUE #> 224 pseudo_binary_subj_224   B     TRUE #> 225 pseudo_binary_subj_225   B     TRUE #> 226 pseudo_binary_subj_226   B     TRUE #> 227 pseudo_binary_subj_227   B     TRUE #> 228 pseudo_binary_subj_228   B     TRUE #> 229 pseudo_binary_subj_229   B     TRUE #> 230 pseudo_binary_subj_230   B     TRUE #> 231 pseudo_binary_subj_231   B     TRUE #> 232 pseudo_binary_subj_232   B     TRUE #> 233 pseudo_binary_subj_233   B     TRUE #> 234 pseudo_binary_subj_234   B     TRUE #> 235 pseudo_binary_subj_235   B     TRUE #> 236 pseudo_binary_subj_236   B     TRUE #> 237 pseudo_binary_subj_237   B     TRUE #> 238 pseudo_binary_subj_238   B     TRUE #> 239 pseudo_binary_subj_239   B     TRUE #> 240 pseudo_binary_subj_240   B     TRUE #> 241 pseudo_binary_subj_241   B     TRUE #> 242 pseudo_binary_subj_242   B     TRUE #> 243 pseudo_binary_subj_243   B     TRUE #> 244 pseudo_binary_subj_244   B     TRUE #> 245 pseudo_binary_subj_245   B     TRUE #> 246 pseudo_binary_subj_246   B     TRUE #> 247 pseudo_binary_subj_247   B     TRUE #> 248 pseudo_binary_subj_248   B     TRUE #> 249 pseudo_binary_subj_249   B     TRUE #> 250 pseudo_binary_subj_250   B     TRUE #> 251 pseudo_binary_subj_251   B     TRUE #> 252 pseudo_binary_subj_252   B     TRUE #> 253 pseudo_binary_subj_253   B     TRUE #> 254 pseudo_binary_subj_254   B     TRUE #> 255 pseudo_binary_subj_255   B     TRUE #> 256 pseudo_binary_subj_256   B     TRUE #> 257 pseudo_binary_subj_257   B     TRUE #> 258 pseudo_binary_subj_258   B     TRUE #> 259 pseudo_binary_subj_259   B     TRUE #> 260 pseudo_binary_subj_260   B     TRUE #> 261 pseudo_binary_subj_261   B     TRUE #> 262 pseudo_binary_subj_262   B     TRUE #> 263 pseudo_binary_subj_263   B     TRUE #> 264 pseudo_binary_subj_264   B     TRUE #> 265 pseudo_binary_subj_265   B     TRUE #> 266 pseudo_binary_subj_266   B     TRUE #> 267 pseudo_binary_subj_267   B     TRUE #> 268 pseudo_binary_subj_268   B     TRUE #> 269 pseudo_binary_subj_269   B     TRUE #> 270 pseudo_binary_subj_270   B     TRUE #> 271 pseudo_binary_subj_271   B     TRUE #> 272 pseudo_binary_subj_272   B     TRUE #> 273 pseudo_binary_subj_273   B     TRUE #> 274 pseudo_binary_subj_274   B     TRUE #> 275 pseudo_binary_subj_275   B     TRUE #> 276 pseudo_binary_subj_276   B     TRUE #> 277 pseudo_binary_subj_277   B     TRUE #> 278 pseudo_binary_subj_278   B     TRUE #> 279 pseudo_binary_subj_279   B     TRUE #> 280 pseudo_binary_subj_280   B     TRUE #> 281 pseudo_binary_subj_281   B    FALSE #> 282 pseudo_binary_subj_282   B    FALSE #> 283 pseudo_binary_subj_283   B    FALSE #> 284 pseudo_binary_subj_284   B    FALSE #> 285 pseudo_binary_subj_285   B    FALSE #> 286 pseudo_binary_subj_286   B    FALSE #> 287 pseudo_binary_subj_287   B    FALSE #> 288 pseudo_binary_subj_288   B    FALSE #> 289 pseudo_binary_subj_289   B    FALSE #> 290 pseudo_binary_subj_290   B    FALSE #> 291 pseudo_binary_subj_291   B    FALSE #> 292 pseudo_binary_subj_292   B    FALSE #> 293 pseudo_binary_subj_293   B    FALSE #> 294 pseudo_binary_subj_294   B    FALSE #> 295 pseudo_binary_subj_295   B    FALSE #> 296 pseudo_binary_subj_296   B    FALSE #> 297 pseudo_binary_subj_297   B    FALSE #> 298 pseudo_binary_subj_298   B    FALSE #> 299 pseudo_binary_subj_299   B    FALSE #> 300 pseudo_binary_subj_300   B    FALSE #> 301 pseudo_binary_subj_301   B    FALSE #> 302 pseudo_binary_subj_302   B    FALSE #> 303 pseudo_binary_subj_303   B    FALSE #> 304 pseudo_binary_subj_304   B    FALSE #> 305 pseudo_binary_subj_305   B    FALSE #> 306 pseudo_binary_subj_306   B    FALSE #> 307 pseudo_binary_subj_307   B    FALSE #> 308 pseudo_binary_subj_308   B    FALSE #> 309 pseudo_binary_subj_309   B    FALSE #> 310 pseudo_binary_subj_310   B    FALSE #> 311 pseudo_binary_subj_311   B    FALSE #> 312 pseudo_binary_subj_312   B    FALSE #> 313 pseudo_binary_subj_313   B    FALSE #> 314 pseudo_binary_subj_314   B    FALSE #> 315 pseudo_binary_subj_315   B    FALSE #> 316 pseudo_binary_subj_316   B    FALSE #> 317 pseudo_binary_subj_317   B    FALSE #> 318 pseudo_binary_subj_318   B    FALSE #> 319 pseudo_binary_subj_319   B    FALSE #> 320 pseudo_binary_subj_320   B    FALSE #> 321 pseudo_binary_subj_321   B    FALSE #> 322 pseudo_binary_subj_322   B    FALSE #> 323 pseudo_binary_subj_323   B    FALSE #> 324 pseudo_binary_subj_324   B    FALSE #> 325 pseudo_binary_subj_325   B    FALSE #> 326 pseudo_binary_subj_326   B    FALSE #> 327 pseudo_binary_subj_327   B    FALSE #> 328 pseudo_binary_subj_328   B    FALSE #> 329 pseudo_binary_subj_329   B    FALSE #> 330 pseudo_binary_subj_330   B    FALSE #> 331 pseudo_binary_subj_331   B    FALSE #> 332 pseudo_binary_subj_332   B    FALSE #> 333 pseudo_binary_subj_333   B    FALSE #> 334 pseudo_binary_subj_334   B    FALSE #> 335 pseudo_binary_subj_335   B    FALSE #> 336 pseudo_binary_subj_336   B    FALSE #> 337 pseudo_binary_subj_337   B    FALSE #> 338 pseudo_binary_subj_338   B    FALSE #> 339 pseudo_binary_subj_339   B    FALSE #> 340 pseudo_binary_subj_340   B    FALSE #> 341 pseudo_binary_subj_341   B    FALSE #> 342 pseudo_binary_subj_342   B    FALSE #> 343 pseudo_binary_subj_343   B    FALSE #> 344 pseudo_binary_subj_344   B    FALSE #> 345 pseudo_binary_subj_345   B    FALSE #> 346 pseudo_binary_subj_346   B    FALSE #> 347 pseudo_binary_subj_347   B    FALSE #> 348 pseudo_binary_subj_348   B    FALSE #> 349 pseudo_binary_subj_349   B    FALSE #> 350 pseudo_binary_subj_350   B    FALSE #> 351 pseudo_binary_subj_351   B    FALSE #> 352 pseudo_binary_subj_352   B    FALSE #> 353 pseudo_binary_subj_353   B    FALSE #> 354 pseudo_binary_subj_354   B    FALSE #> 355 pseudo_binary_subj_355   B    FALSE #> 356 pseudo_binary_subj_356   B    FALSE #> 357 pseudo_binary_subj_357   B    FALSE #> 358 pseudo_binary_subj_358   B    FALSE #> 359 pseudo_binary_subj_359   B    FALSE #> 360 pseudo_binary_subj_360   B    FALSE #> 361 pseudo_binary_subj_361   B    FALSE #> 362 pseudo_binary_subj_362   B    FALSE #> 363 pseudo_binary_subj_363   B    FALSE #> 364 pseudo_binary_subj_364   B    FALSE #> 365 pseudo_binary_subj_365   B    FALSE #> 366 pseudo_binary_subj_366   B    FALSE #> 367 pseudo_binary_subj_367   B    FALSE #> 368 pseudo_binary_subj_368   B    FALSE #> 369 pseudo_binary_subj_369   B    FALSE #> 370 pseudo_binary_subj_370   B    FALSE #> 371 pseudo_binary_subj_371   B    FALSE #> 372 pseudo_binary_subj_372   B    FALSE #> 373 pseudo_binary_subj_373   B    FALSE #> 374 pseudo_binary_subj_374   B    FALSE #> 375 pseudo_binary_subj_375   B    FALSE #> 376 pseudo_binary_subj_376   B    FALSE #> 377 pseudo_binary_subj_377   B    FALSE #> 378 pseudo_binary_subj_378   B    FALSE #> 379 pseudo_binary_subj_379   B    FALSE #> 380 pseudo_binary_subj_380   B    FALSE #> 381 pseudo_binary_subj_381   B    FALSE #> 382 pseudo_binary_subj_382   B    FALSE #> 383 pseudo_binary_subj_383   B    FALSE #> 384 pseudo_binary_subj_384   B    FALSE #> 385 pseudo_binary_subj_385   B    FALSE #> 386 pseudo_binary_subj_386   B    FALSE #> 387 pseudo_binary_subj_387   B    FALSE #> 388 pseudo_binary_subj_388   B    FALSE #> 389 pseudo_binary_subj_389   B    FALSE #> 390 pseudo_binary_subj_390   B    FALSE #> 391 pseudo_binary_subj_391   B    FALSE #> 392 pseudo_binary_subj_392   B    FALSE #> 393 pseudo_binary_subj_393   B    FALSE #> 394 pseudo_binary_subj_394   B    FALSE #> 395 pseudo_binary_subj_395   B    FALSE #> 396 pseudo_binary_subj_396   B    FALSE #> 397 pseudo_binary_subj_397   B    FALSE #> 398 pseudo_binary_subj_398   B    FALSE #> 399 pseudo_binary_subj_399   B    FALSE #> 400 pseudo_binary_subj_400   B    FALSE  # example of stacked get_pseudo_ipd_binary(   binary_agd = data.frame(     ARM = rep(\"B\", 2),     RESPONSE = c(\"YES\", \"NO\"),     COUNT = c(280, 120)   ),   format = \"stacked\" ) #>                    USUBJID ARM RESPONSE #> 1     pseudo_binary_subj_1   B     TRUE #> 2     pseudo_binary_subj_2   B     TRUE #> 3     pseudo_binary_subj_3   B     TRUE #> 4     pseudo_binary_subj_4   B     TRUE #> 5     pseudo_binary_subj_5   B     TRUE #> 6     pseudo_binary_subj_6   B     TRUE #> 7     pseudo_binary_subj_7   B     TRUE #> 8     pseudo_binary_subj_8   B     TRUE #> 9     pseudo_binary_subj_9   B     TRUE #> 10   pseudo_binary_subj_10   B     TRUE #> 11   pseudo_binary_subj_11   B     TRUE #> 12   pseudo_binary_subj_12   B     TRUE #> 13   pseudo_binary_subj_13   B     TRUE #> 14   pseudo_binary_subj_14   B     TRUE #> 15   pseudo_binary_subj_15   B     TRUE #> 16   pseudo_binary_subj_16   B     TRUE #> 17   pseudo_binary_subj_17   B     TRUE #> 18   pseudo_binary_subj_18   B     TRUE #> 19   pseudo_binary_subj_19   B     TRUE #> 20   pseudo_binary_subj_20   B     TRUE #> 21   pseudo_binary_subj_21   B     TRUE #> 22   pseudo_binary_subj_22   B     TRUE #> 23   pseudo_binary_subj_23   B     TRUE #> 24   pseudo_binary_subj_24   B     TRUE #> 25   pseudo_binary_subj_25   B     TRUE #> 26   pseudo_binary_subj_26   B     TRUE #> 27   pseudo_binary_subj_27   B     TRUE #> 28   pseudo_binary_subj_28   B     TRUE #> 29   pseudo_binary_subj_29   B     TRUE #> 30   pseudo_binary_subj_30   B     TRUE #> 31   pseudo_binary_subj_31   B     TRUE #> 32   pseudo_binary_subj_32   B     TRUE #> 33   pseudo_binary_subj_33   B     TRUE #> 34   pseudo_binary_subj_34   B     TRUE #> 35   pseudo_binary_subj_35   B     TRUE #> 36   pseudo_binary_subj_36   B     TRUE #> 37   pseudo_binary_subj_37   B     TRUE #> 38   pseudo_binary_subj_38   B     TRUE #> 39   pseudo_binary_subj_39   B     TRUE #> 40   pseudo_binary_subj_40   B     TRUE #> 41   pseudo_binary_subj_41   B     TRUE #> 42   pseudo_binary_subj_42   B     TRUE #> 43   pseudo_binary_subj_43   B     TRUE #> 44   pseudo_binary_subj_44   B     TRUE #> 45   pseudo_binary_subj_45   B     TRUE #> 46   pseudo_binary_subj_46   B     TRUE #> 47   pseudo_binary_subj_47   B     TRUE #> 48   pseudo_binary_subj_48   B     TRUE #> 49   pseudo_binary_subj_49   B     TRUE #> 50   pseudo_binary_subj_50   B     TRUE #> 51   pseudo_binary_subj_51   B     TRUE #> 52   pseudo_binary_subj_52   B     TRUE #> 53   pseudo_binary_subj_53   B     TRUE #> 54   pseudo_binary_subj_54   B     TRUE #> 55   pseudo_binary_subj_55   B     TRUE #> 56   pseudo_binary_subj_56   B     TRUE #> 57   pseudo_binary_subj_57   B     TRUE #> 58   pseudo_binary_subj_58   B     TRUE #> 59   pseudo_binary_subj_59   B     TRUE #> 60   pseudo_binary_subj_60   B     TRUE #> 61   pseudo_binary_subj_61   B     TRUE #> 62   pseudo_binary_subj_62   B     TRUE #> 63   pseudo_binary_subj_63   B     TRUE #> 64   pseudo_binary_subj_64   B     TRUE #> 65   pseudo_binary_subj_65   B     TRUE #> 66   pseudo_binary_subj_66   B     TRUE #> 67   pseudo_binary_subj_67   B     TRUE #> 68   pseudo_binary_subj_68   B     TRUE #> 69   pseudo_binary_subj_69   B     TRUE #> 70   pseudo_binary_subj_70   B     TRUE #> 71   pseudo_binary_subj_71   B     TRUE #> 72   pseudo_binary_subj_72   B     TRUE #> 73   pseudo_binary_subj_73   B     TRUE #> 74   pseudo_binary_subj_74   B     TRUE #> 75   pseudo_binary_subj_75   B     TRUE #> 76   pseudo_binary_subj_76   B     TRUE #> 77   pseudo_binary_subj_77   B     TRUE #> 78   pseudo_binary_subj_78   B     TRUE #> 79   pseudo_binary_subj_79   B     TRUE #> 80   pseudo_binary_subj_80   B     TRUE #> 81   pseudo_binary_subj_81   B     TRUE #> 82   pseudo_binary_subj_82   B     TRUE #> 83   pseudo_binary_subj_83   B     TRUE #> 84   pseudo_binary_subj_84   B     TRUE #> 85   pseudo_binary_subj_85   B     TRUE #> 86   pseudo_binary_subj_86   B     TRUE #> 87   pseudo_binary_subj_87   B     TRUE #> 88   pseudo_binary_subj_88   B     TRUE #> 89   pseudo_binary_subj_89   B     TRUE #> 90   pseudo_binary_subj_90   B     TRUE #> 91   pseudo_binary_subj_91   B     TRUE #> 92   pseudo_binary_subj_92   B     TRUE #> 93   pseudo_binary_subj_93   B     TRUE #> 94   pseudo_binary_subj_94   B     TRUE #> 95   pseudo_binary_subj_95   B     TRUE #> 96   pseudo_binary_subj_96   B     TRUE #> 97   pseudo_binary_subj_97   B     TRUE #> 98   pseudo_binary_subj_98   B     TRUE #> 99   pseudo_binary_subj_99   B     TRUE #> 100 pseudo_binary_subj_100   B     TRUE #> 101 pseudo_binary_subj_101   B     TRUE #> 102 pseudo_binary_subj_102   B     TRUE #> 103 pseudo_binary_subj_103   B     TRUE #> 104 pseudo_binary_subj_104   B     TRUE #> 105 pseudo_binary_subj_105   B     TRUE #> 106 pseudo_binary_subj_106   B     TRUE #> 107 pseudo_binary_subj_107   B     TRUE #> 108 pseudo_binary_subj_108   B     TRUE #> 109 pseudo_binary_subj_109   B     TRUE #> 110 pseudo_binary_subj_110   B     TRUE #> 111 pseudo_binary_subj_111   B     TRUE #> 112 pseudo_binary_subj_112   B     TRUE #> 113 pseudo_binary_subj_113   B     TRUE #> 114 pseudo_binary_subj_114   B     TRUE #> 115 pseudo_binary_subj_115   B     TRUE #> 116 pseudo_binary_subj_116   B     TRUE #> 117 pseudo_binary_subj_117   B     TRUE #> 118 pseudo_binary_subj_118   B     TRUE #> 119 pseudo_binary_subj_119   B     TRUE #> 120 pseudo_binary_subj_120   B     TRUE #> 121 pseudo_binary_subj_121   B     TRUE #> 122 pseudo_binary_subj_122   B     TRUE #> 123 pseudo_binary_subj_123   B     TRUE #> 124 pseudo_binary_subj_124   B     TRUE #> 125 pseudo_binary_subj_125   B     TRUE #> 126 pseudo_binary_subj_126   B     TRUE #> 127 pseudo_binary_subj_127   B     TRUE #> 128 pseudo_binary_subj_128   B     TRUE #> 129 pseudo_binary_subj_129   B     TRUE #> 130 pseudo_binary_subj_130   B     TRUE #> 131 pseudo_binary_subj_131   B     TRUE #> 132 pseudo_binary_subj_132   B     TRUE #> 133 pseudo_binary_subj_133   B     TRUE #> 134 pseudo_binary_subj_134   B     TRUE #> 135 pseudo_binary_subj_135   B     TRUE #> 136 pseudo_binary_subj_136   B     TRUE #> 137 pseudo_binary_subj_137   B     TRUE #> 138 pseudo_binary_subj_138   B     TRUE #> 139 pseudo_binary_subj_139   B     TRUE #> 140 pseudo_binary_subj_140   B     TRUE #> 141 pseudo_binary_subj_141   B     TRUE #> 142 pseudo_binary_subj_142   B     TRUE #> 143 pseudo_binary_subj_143   B     TRUE #> 144 pseudo_binary_subj_144   B     TRUE #> 145 pseudo_binary_subj_145   B     TRUE #> 146 pseudo_binary_subj_146   B     TRUE #> 147 pseudo_binary_subj_147   B     TRUE #> 148 pseudo_binary_subj_148   B     TRUE #> 149 pseudo_binary_subj_149   B     TRUE #> 150 pseudo_binary_subj_150   B     TRUE #> 151 pseudo_binary_subj_151   B     TRUE #> 152 pseudo_binary_subj_152   B     TRUE #> 153 pseudo_binary_subj_153   B     TRUE #> 154 pseudo_binary_subj_154   B     TRUE #> 155 pseudo_binary_subj_155   B     TRUE #> 156 pseudo_binary_subj_156   B     TRUE #> 157 pseudo_binary_subj_157   B     TRUE #> 158 pseudo_binary_subj_158   B     TRUE #> 159 pseudo_binary_subj_159   B     TRUE #> 160 pseudo_binary_subj_160   B     TRUE #> 161 pseudo_binary_subj_161   B     TRUE #> 162 pseudo_binary_subj_162   B     TRUE #> 163 pseudo_binary_subj_163   B     TRUE #> 164 pseudo_binary_subj_164   B     TRUE #> 165 pseudo_binary_subj_165   B     TRUE #> 166 pseudo_binary_subj_166   B     TRUE #> 167 pseudo_binary_subj_167   B     TRUE #> 168 pseudo_binary_subj_168   B     TRUE #> 169 pseudo_binary_subj_169   B     TRUE #> 170 pseudo_binary_subj_170   B     TRUE #> 171 pseudo_binary_subj_171   B     TRUE #> 172 pseudo_binary_subj_172   B     TRUE #> 173 pseudo_binary_subj_173   B     TRUE #> 174 pseudo_binary_subj_174   B     TRUE #> 175 pseudo_binary_subj_175   B     TRUE #> 176 pseudo_binary_subj_176   B     TRUE #> 177 pseudo_binary_subj_177   B     TRUE #> 178 pseudo_binary_subj_178   B     TRUE #> 179 pseudo_binary_subj_179   B     TRUE #> 180 pseudo_binary_subj_180   B     TRUE #> 181 pseudo_binary_subj_181   B     TRUE #> 182 pseudo_binary_subj_182   B     TRUE #> 183 pseudo_binary_subj_183   B     TRUE #> 184 pseudo_binary_subj_184   B     TRUE #> 185 pseudo_binary_subj_185   B     TRUE #> 186 pseudo_binary_subj_186   B     TRUE #> 187 pseudo_binary_subj_187   B     TRUE #> 188 pseudo_binary_subj_188   B     TRUE #> 189 pseudo_binary_subj_189   B     TRUE #> 190 pseudo_binary_subj_190   B     TRUE #> 191 pseudo_binary_subj_191   B     TRUE #> 192 pseudo_binary_subj_192   B     TRUE #> 193 pseudo_binary_subj_193   B     TRUE #> 194 pseudo_binary_subj_194   B     TRUE #> 195 pseudo_binary_subj_195   B     TRUE #> 196 pseudo_binary_subj_196   B     TRUE #> 197 pseudo_binary_subj_197   B     TRUE #> 198 pseudo_binary_subj_198   B     TRUE #> 199 pseudo_binary_subj_199   B     TRUE #> 200 pseudo_binary_subj_200   B     TRUE #> 201 pseudo_binary_subj_201   B     TRUE #> 202 pseudo_binary_subj_202   B     TRUE #> 203 pseudo_binary_subj_203   B     TRUE #> 204 pseudo_binary_subj_204   B     TRUE #> 205 pseudo_binary_subj_205   B     TRUE #> 206 pseudo_binary_subj_206   B     TRUE #> 207 pseudo_binary_subj_207   B     TRUE #> 208 pseudo_binary_subj_208   B     TRUE #> 209 pseudo_binary_subj_209   B     TRUE #> 210 pseudo_binary_subj_210   B     TRUE #> 211 pseudo_binary_subj_211   B     TRUE #> 212 pseudo_binary_subj_212   B     TRUE #> 213 pseudo_binary_subj_213   B     TRUE #> 214 pseudo_binary_subj_214   B     TRUE #> 215 pseudo_binary_subj_215   B     TRUE #> 216 pseudo_binary_subj_216   B     TRUE #> 217 pseudo_binary_subj_217   B     TRUE #> 218 pseudo_binary_subj_218   B     TRUE #> 219 pseudo_binary_subj_219   B     TRUE #> 220 pseudo_binary_subj_220   B     TRUE #> 221 pseudo_binary_subj_221   B     TRUE #> 222 pseudo_binary_subj_222   B     TRUE #> 223 pseudo_binary_subj_223   B     TRUE #> 224 pseudo_binary_subj_224   B     TRUE #> 225 pseudo_binary_subj_225   B     TRUE #> 226 pseudo_binary_subj_226   B     TRUE #> 227 pseudo_binary_subj_227   B     TRUE #> 228 pseudo_binary_subj_228   B     TRUE #> 229 pseudo_binary_subj_229   B     TRUE #> 230 pseudo_binary_subj_230   B     TRUE #> 231 pseudo_binary_subj_231   B     TRUE #> 232 pseudo_binary_subj_232   B     TRUE #> 233 pseudo_binary_subj_233   B     TRUE #> 234 pseudo_binary_subj_234   B     TRUE #> 235 pseudo_binary_subj_235   B     TRUE #> 236 pseudo_binary_subj_236   B     TRUE #> 237 pseudo_binary_subj_237   B     TRUE #> 238 pseudo_binary_subj_238   B     TRUE #> 239 pseudo_binary_subj_239   B     TRUE #> 240 pseudo_binary_subj_240   B     TRUE #> 241 pseudo_binary_subj_241   B     TRUE #> 242 pseudo_binary_subj_242   B     TRUE #> 243 pseudo_binary_subj_243   B     TRUE #> 244 pseudo_binary_subj_244   B     TRUE #> 245 pseudo_binary_subj_245   B     TRUE #> 246 pseudo_binary_subj_246   B     TRUE #> 247 pseudo_binary_subj_247   B     TRUE #> 248 pseudo_binary_subj_248   B     TRUE #> 249 pseudo_binary_subj_249   B     TRUE #> 250 pseudo_binary_subj_250   B     TRUE #> 251 pseudo_binary_subj_251   B     TRUE #> 252 pseudo_binary_subj_252   B     TRUE #> 253 pseudo_binary_subj_253   B     TRUE #> 254 pseudo_binary_subj_254   B     TRUE #> 255 pseudo_binary_subj_255   B     TRUE #> 256 pseudo_binary_subj_256   B     TRUE #> 257 pseudo_binary_subj_257   B     TRUE #> 258 pseudo_binary_subj_258   B     TRUE #> 259 pseudo_binary_subj_259   B     TRUE #> 260 pseudo_binary_subj_260   B     TRUE #> 261 pseudo_binary_subj_261   B     TRUE #> 262 pseudo_binary_subj_262   B     TRUE #> 263 pseudo_binary_subj_263   B     TRUE #> 264 pseudo_binary_subj_264   B     TRUE #> 265 pseudo_binary_subj_265   B     TRUE #> 266 pseudo_binary_subj_266   B     TRUE #> 267 pseudo_binary_subj_267   B     TRUE #> 268 pseudo_binary_subj_268   B     TRUE #> 269 pseudo_binary_subj_269   B     TRUE #> 270 pseudo_binary_subj_270   B     TRUE #> 271 pseudo_binary_subj_271   B     TRUE #> 272 pseudo_binary_subj_272   B     TRUE #> 273 pseudo_binary_subj_273   B     TRUE #> 274 pseudo_binary_subj_274   B     TRUE #> 275 pseudo_binary_subj_275   B     TRUE #> 276 pseudo_binary_subj_276   B     TRUE #> 277 pseudo_binary_subj_277   B     TRUE #> 278 pseudo_binary_subj_278   B     TRUE #> 279 pseudo_binary_subj_279   B     TRUE #> 280 pseudo_binary_subj_280   B     TRUE #> 281 pseudo_binary_subj_281   B    FALSE #> 282 pseudo_binary_subj_282   B    FALSE #> 283 pseudo_binary_subj_283   B    FALSE #> 284 pseudo_binary_subj_284   B    FALSE #> 285 pseudo_binary_subj_285   B    FALSE #> 286 pseudo_binary_subj_286   B    FALSE #> 287 pseudo_binary_subj_287   B    FALSE #> 288 pseudo_binary_subj_288   B    FALSE #> 289 pseudo_binary_subj_289   B    FALSE #> 290 pseudo_binary_subj_290   B    FALSE #> 291 pseudo_binary_subj_291   B    FALSE #> 292 pseudo_binary_subj_292   B    FALSE #> 293 pseudo_binary_subj_293   B    FALSE #> 294 pseudo_binary_subj_294   B    FALSE #> 295 pseudo_binary_subj_295   B    FALSE #> 296 pseudo_binary_subj_296   B    FALSE #> 297 pseudo_binary_subj_297   B    FALSE #> 298 pseudo_binary_subj_298   B    FALSE #> 299 pseudo_binary_subj_299   B    FALSE #> 300 pseudo_binary_subj_300   B    FALSE #> 301 pseudo_binary_subj_301   B    FALSE #> 302 pseudo_binary_subj_302   B    FALSE #> 303 pseudo_binary_subj_303   B    FALSE #> 304 pseudo_binary_subj_304   B    FALSE #> 305 pseudo_binary_subj_305   B    FALSE #> 306 pseudo_binary_subj_306   B    FALSE #> 307 pseudo_binary_subj_307   B    FALSE #> 308 pseudo_binary_subj_308   B    FALSE #> 309 pseudo_binary_subj_309   B    FALSE #> 310 pseudo_binary_subj_310   B    FALSE #> 311 pseudo_binary_subj_311   B    FALSE #> 312 pseudo_binary_subj_312   B    FALSE #> 313 pseudo_binary_subj_313   B    FALSE #> 314 pseudo_binary_subj_314   B    FALSE #> 315 pseudo_binary_subj_315   B    FALSE #> 316 pseudo_binary_subj_316   B    FALSE #> 317 pseudo_binary_subj_317   B    FALSE #> 318 pseudo_binary_subj_318   B    FALSE #> 319 pseudo_binary_subj_319   B    FALSE #> 320 pseudo_binary_subj_320   B    FALSE #> 321 pseudo_binary_subj_321   B    FALSE #> 322 pseudo_binary_subj_322   B    FALSE #> 323 pseudo_binary_subj_323   B    FALSE #> 324 pseudo_binary_subj_324   B    FALSE #> 325 pseudo_binary_subj_325   B    FALSE #> 326 pseudo_binary_subj_326   B    FALSE #> 327 pseudo_binary_subj_327   B    FALSE #> 328 pseudo_binary_subj_328   B    FALSE #> 329 pseudo_binary_subj_329   B    FALSE #> 330 pseudo_binary_subj_330   B    FALSE #> 331 pseudo_binary_subj_331   B    FALSE #> 332 pseudo_binary_subj_332   B    FALSE #> 333 pseudo_binary_subj_333   B    FALSE #> 334 pseudo_binary_subj_334   B    FALSE #> 335 pseudo_binary_subj_335   B    FALSE #> 336 pseudo_binary_subj_336   B    FALSE #> 337 pseudo_binary_subj_337   B    FALSE #> 338 pseudo_binary_subj_338   B    FALSE #> 339 pseudo_binary_subj_339   B    FALSE #> 340 pseudo_binary_subj_340   B    FALSE #> 341 pseudo_binary_subj_341   B    FALSE #> 342 pseudo_binary_subj_342   B    FALSE #> 343 pseudo_binary_subj_343   B    FALSE #> 344 pseudo_binary_subj_344   B    FALSE #> 345 pseudo_binary_subj_345   B    FALSE #> 346 pseudo_binary_subj_346   B    FALSE #> 347 pseudo_binary_subj_347   B    FALSE #> 348 pseudo_binary_subj_348   B    FALSE #> 349 pseudo_binary_subj_349   B    FALSE #> 350 pseudo_binary_subj_350   B    FALSE #> 351 pseudo_binary_subj_351   B    FALSE #> 352 pseudo_binary_subj_352   B    FALSE #> 353 pseudo_binary_subj_353   B    FALSE #> 354 pseudo_binary_subj_354   B    FALSE #> 355 pseudo_binary_subj_355   B    FALSE #> 356 pseudo_binary_subj_356   B    FALSE #> 357 pseudo_binary_subj_357   B    FALSE #> 358 pseudo_binary_subj_358   B    FALSE #> 359 pseudo_binary_subj_359   B    FALSE #> 360 pseudo_binary_subj_360   B    FALSE #> 361 pseudo_binary_subj_361   B    FALSE #> 362 pseudo_binary_subj_362   B    FALSE #> 363 pseudo_binary_subj_363   B    FALSE #> 364 pseudo_binary_subj_364   B    FALSE #> 365 pseudo_binary_subj_365   B    FALSE #> 366 pseudo_binary_subj_366   B    FALSE #> 367 pseudo_binary_subj_367   B    FALSE #> 368 pseudo_binary_subj_368   B    FALSE #> 369 pseudo_binary_subj_369   B    FALSE #> 370 pseudo_binary_subj_370   B    FALSE #> 371 pseudo_binary_subj_371   B    FALSE #> 372 pseudo_binary_subj_372   B    FALSE #> 373 pseudo_binary_subj_373   B    FALSE #> 374 pseudo_binary_subj_374   B    FALSE #> 375 pseudo_binary_subj_375   B    FALSE #> 376 pseudo_binary_subj_376   B    FALSE #> 377 pseudo_binary_subj_377   B    FALSE #> 378 pseudo_binary_subj_378   B    FALSE #> 379 pseudo_binary_subj_379   B    FALSE #> 380 pseudo_binary_subj_380   B    FALSE #> 381 pseudo_binary_subj_381   B    FALSE #> 382 pseudo_binary_subj_382   B    FALSE #> 383 pseudo_binary_subj_383   B    FALSE #> 384 pseudo_binary_subj_384   B    FALSE #> 385 pseudo_binary_subj_385   B    FALSE #> 386 pseudo_binary_subj_386   B    FALSE #> 387 pseudo_binary_subj_387   B    FALSE #> 388 pseudo_binary_subj_388   B    FALSE #> 389 pseudo_binary_subj_389   B    FALSE #> 390 pseudo_binary_subj_390   B    FALSE #> 391 pseudo_binary_subj_391   B    FALSE #> 392 pseudo_binary_subj_392   B    FALSE #> 393 pseudo_binary_subj_393   B    FALSE #> 394 pseudo_binary_subj_394   B    FALSE #> 395 pseudo_binary_subj_395   B    FALSE #> 396 pseudo_binary_subj_396   B    FALSE #> 397 pseudo_binary_subj_397   B    FALSE #> 398 pseudo_binary_subj_398   B    FALSE #> 399 pseudo_binary_subj_399   B    FALSE #> 400 pseudo_binary_subj_400   B    FALSE"},{"path":"https://hta-pharma.github.io/maicplus/reference/get_time_as.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Time Values Using Scaling Factors — get_time_as","title":"Convert Time Values Using Scaling Factors — get_time_as","text":"Convert Time Values Using Scaling Factors","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/get_time_as.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Time Values Using Scaling Factors — get_time_as","text":"","code":"get_time_as(times, as = c(\"days\", \"weeks\", \"months\", \"years\"))"},{"path":"https://hta-pharma.github.io/maicplus/reference/get_time_as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Time Values Using Scaling Factors — get_time_as","text":"times Numeric time values time scale convert ","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/get_time_as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Time Values Using Scaling Factors — get_time_as","text":"Returns numeric vector calculated times / get_time_conversion(factor = )","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/kmplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Kaplan Meier (KM) plot function for anchored and unanchored cases — kmplot","title":"Kaplan Meier (KM) plot function for anchored and unanchored cases — kmplot","text":"wrapper function basic_kmplot. argument setting similar maic_anchored maic_unanchored, used two functions.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/kmplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kaplan Meier (KM) plot function for anchored and unanchored cases — kmplot","text":"","code":"kmplot(   weights_object,   tte_ipd,   tte_pseudo_ipd,   trt_ipd,   trt_agd,   trt_common = NULL,   trt_var_ipd = \"ARM\",   trt_var_agd = \"ARM\",   km_conf_type = \"log-log\",   km_layout = c(\"all\", \"by_trial\", \"by_arm\"),   ... )"},{"path":"https://hta-pharma.github.io/maicplus/reference/kmplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kaplan Meier (KM) plot function for anchored and unanchored cases — kmplot","text":"weights_object object returned estimate_weight tte_ipd data frame individual patient data (IPD) internal trial, contain least \"USUBJID\", \"EVENT\", \"TIME\" columns column indicating treatment assignment tte_pseudo_ipd data frame pseudo IPD digitized KM curves external trial (time--event endpoint), contain least \"EVENT\", \"TIME\" trt_ipd string, name interested investigation arm internal trial dat_igd (real IPD) trt_agd string, name interested investigation arm external trial dat_pseudo (pseudo IPD) trt_common string, name common comparator internal external trial, default NULL, indicating unanchored case trt_var_ipd string, column name tte_ipd contains treatment assignment trt_var_agd string, column name tte_pseudo_ipd contains treatment assignment km_conf_type string, pass conf.type survfit km_layout string, applicable unanchored case (trt_common = NULL), indicated desired layout output KM curve. ... arguments basic_kmplot","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/kmplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kaplan Meier (KM) plot function for anchored and unanchored cases — kmplot","text":"unanchored case, KM plot risk set table. anchored case, depending km_layout, \"by_trial\", 2 1 plot, first KM curves (incl. weighted) IPD trial, KM curves AgD trial, risk set table. \"by_arm\", 2 1 plot, first KM curves trt_agd  trt_ipd (without weights), KM curves trt_common AgD trial IPD trial (without weights). Risk set table appended. \"\", 2 2 plot, plots \"by_trial\" \"by_arm\" without risk set table appended.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/kmplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kaplan Meier (KM) plot function for anchored and unanchored cases — kmplot","text":"","code":"# anchored example using kmplot  ### IPD # Read in relevant ADaM data and rename variables of interest adsl <- read.csv(system.file(\"extdata\", \"adsl.csv\",   package = \"maicplus\",   mustWork = TRUE )) adtte <- read.csv(system.file(\"extdata\", \"adtte.csv\",   package = \"maicplus\",   mustWork = TRUE )) adtte$TIME <- adtte$AVAL adtte$EVENT <- adtte$EVNT adtte2 <- adtte adtte2$ARM <- \"C\" adtte2$TIME <- adtte2$TIME + 7 adtte <- rbind(adtte, adtte2)  ### AgD # Baseline aggregate data for the comparator population target_pop <- read.csv(system.file(\"extdata\", \"aggregate_data_example_1.csv\",   package = \"maicplus\", mustWork = TRUE )) # for time-to-event endpoints, pseudo IPD from digitalized KM pseudo_ipd <- read.csv(system.file(\"extdata\", \"psuedo_IPD.csv\",   package = \"maicplus\",   mustWork = TRUE )) pseudo_ipd$ARM <- \"B\" pseudo_ipd2 <- pseudo_ipd pseudo_ipd2$ARM <- \"C\" pseudo_ipd2$Time <- pseudo_ipd2$Time + 5 pseudo_ipd <- rbind(pseudo_ipd, pseudo_ipd2)  #### prepare data target_pop <- process_agd(target_pop) adsl <- dummize_ipd(adsl, dummize_cols = c(\"SEX\"), dummize_ref_level = c(\"Female\")) use_adsl <- center_ipd(ipd = adsl, agd = target_pop)  #### derive weights match_res <- estimate_weights(   data = use_adsl,   centered_colnames = grep(\"_CENTERED$\", names(use_adsl)),   start_val = 0,   method = \"BFGS\" )  # plot by trial kmplot(   weights_object = match_res,   tte_ipd = adtte,   trt_var_ipd = \"ARM\",   tte_pseudo_ipd = pseudo_ipd,   trt_var_agd = \"ARM\",   endpoint_name = \"Overall Survival\",   trt_ipd = \"A\",   trt_agd = \"B\",   trt_common = \"C\",   km_conf_type = \"log-log\",   km_layout = \"by_trial\",   time_scale = \"month\",   time_grid = seq(0, 20, by = 2),   use_colors = NULL,   use_line_types = NULL,   use_pch_cex = 0.65,   use_pch_alpha = 100 )     # plot by arm kmplot(   weights_object = match_res,   tte_ipd = adtte,   trt_var_ipd = \"ARM\",   tte_pseudo_ipd = pseudo_ipd,   trt_var_agd = \"ARM\",   endpoint_name = \"Overall Survival\",   trt_ipd = \"A\",   trt_agd = \"B\",   trt_common = \"C\",   km_conf_type = \"log-log\",   km_layout = \"by_arm\",   time_scale = \"month\",   time_grid = seq(0, 20, by = 2),   use_colors = NULL,   use_line_types = NULL,   use_pch_cex = 0.65,   use_pch_alpha = 100 )    # plot all kmplot(   weights_object = match_res,   tte_ipd = adtte,   trt_var_ipd = \"ARM\",   tte_pseudo_ipd = pseudo_ipd,   trt_var_agd = \"ARM\",   endpoint_name = \"Overall Survival\",   trt_ipd = \"A\",   trt_agd = \"B\",   trt_common = \"C\",   km_conf_type = \"log-log\",   km_layout = \"all\",   time_scale = \"month\",   time_grid = seq(0, 20, by = 2),   use_colors = NULL,   use_line_types = NULL,   use_pch_cex = 0.65,   use_pch_alpha = 100 )     # unanchored example using maicplus_kmplot  ### IPD # Read in relevant ADaM data and rename variables of interest adsl <- read.csv(system.file(\"extdata\", \"adsl.csv\",   package = \"maicplus\",   mustWork = TRUE )) adtte <- read.csv(system.file(\"extdata\", \"adtte.csv\",   package = \"maicplus\",   mustWork = TRUE )) adtte$TIME <- adtte$AVAL adtte$EVENT <- adtte$EVNT  ### AgD # Baseline aggregate data for the comparator population target_pop <- read.csv(system.file(\"extdata\", \"aggregate_data_example_1.csv\",   package = \"maicplus\", mustWork = TRUE )) # for time-to-event endpoints, pseudo IPD from digitalized KM pseudo_ipd <- read.csv(system.file(\"extdata\", \"psuedo_IPD.csv\",   package = \"maicplus\",   mustWork = TRUE )) pseudo_ipd$ARM <- \"B\"  #### prepare data target_pop <- process_agd(target_pop) adsl <- dummize_ipd(adsl, dummize_cols = c(\"SEX\"), dummize_ref_level = c(\"Female\")) use_adsl <- center_ipd(ipd = adsl, agd = target_pop)  #### derive weights match_res <- estimate_weights(   data = use_adsl,   centered_colnames = grep(\"_CENTERED$\", names(use_adsl)),   start_val = 0,   method = \"BFGS\" )  # plot kmplot(   weights_object = match_res,   tte_ipd = adtte,   trt_var_ipd = \"ARM\",   tte_pseudo_ipd = pseudo_ipd,   trt_var_agd = \"ARM\",   endpoint_name = \"Overall Survival\",   trt_ipd = \"A\",   trt_agd = \"B\",   trt_common = NULL,   km_conf_type = \"log-log\",   time_scale = \"month\",   time_grid = seq(0, 20, by = 2),   use_colors = NULL,   use_line_types = NULL,   use_pch_cex = 0.65,   use_pch_alpha = 100 )"},{"path":"https://hta-pharma.github.io/maicplus/reference/kmplot2.html","id":null,"dir":"Reference","previous_headings":"","what":"Kaplan-Meier (KM) plot function for anchored and unanchored cases using ggplot — kmplot2","title":"Kaplan-Meier (KM) plot function for anchored and unanchored cases using ggplot — kmplot2","text":"wrapper function basic_kmplot2. argument setting similar maic_anchored maic_unanchored, used two functions.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/kmplot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kaplan-Meier (KM) plot function for anchored and unanchored cases using ggplot — kmplot2","text":"","code":"kmplot2(   weights_object,   tte_ipd,   tte_pseudo_ipd,   trt_ipd,   trt_agd,   trt_common = NULL,   trt_var_ipd = \"ARM\",   trt_var_agd = \"ARM\",   km_conf_type = \"log-log\",   km_layout = c(\"all\", \"by_trial\", \"by_arm\"),   time_scale,   ... )"},{"path":"https://hta-pharma.github.io/maicplus/reference/kmplot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kaplan-Meier (KM) plot function for anchored and unanchored cases using ggplot — kmplot2","text":"weights_object object returned estimate_weight tte_ipd data frame individual patient data (IPD) internal trial, contain least \"USUBJID\", \"EVENT\", \"TIME\" columns column indicating treatment assignment tte_pseudo_ipd data frame pseudo IPD digitized KM curves external trial (time--event endpoint), contain least \"EVENT\", \"TIME\" trt_ipd string, name interested investigation arm internal trial dat_igd (real IPD) trt_agd string, name interested investigation arm external trial dat_pseudo (pseudo IPD) trt_common string, name common comparator internal external trial, default NULL, indicating unanchored case trt_var_ipd string, column name tte_ipd contains treatment assignment trt_var_agd string, column name tte_pseudo_ipd contains treatment assignment km_conf_type string, pass conf.type survfit km_layout string, applicable unanchored case (trt_common = NULL), indicated desired layout output KM curve. time_scale string, time unit median survival time, taking value 'years', 'months', weeks' 'days' ... arguments basic_kmplot2","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/kmplot2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kaplan-Meier (KM) plot function for anchored and unanchored cases using ggplot — kmplot2","text":"unanchored case, KM plot risk set table. anchored case, depending km_layout, \"by_trial\", 2 1 plot, first KM curves (incl. weighted) IPD trial, KM curves AgD trial, risk set table. \"by_arm\", 2 1 plot, first KM curves trt_agd  trt_ipd (without weights), KM curves trt_common AgD trial IPD trial (without weights). Risk set table appended. \"\", 2 2 plot, plots \"by_trial\" \"by_arm\" without risk set table appended.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/kmplot2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kaplan-Meier (KM) plot function for anchored and unanchored cases using ggplot — kmplot2","text":"","code":"# anchored example using kmplot  ### IPD # Read in relevant ADaM data and rename variables of interest adsl <- read.csv(system.file(\"extdata\", \"adsl.csv\",   package = \"maicplus\",   mustWork = TRUE )) adtte <- read.csv(system.file(\"extdata\", \"adtte.csv\",   package = \"maicplus\",   mustWork = TRUE )) adtte$TIME <- adtte$AVAL adtte$EVENT <- adtte$EVNT adtte2 <- adtte adtte2$ARM <- \"C\" adtte2$TIME <- adtte2$TIME + 7 adtte <- rbind(adtte, adtte2)  ### AgD # Baseline aggregate data for the comparator population target_pop <- read.csv(system.file(\"extdata\", \"aggregate_data_example_1.csv\",   package = \"maicplus\", mustWork = TRUE )) # for time-to-event endpoints, pseudo IPD from digitalized KM pseudo_ipd <- read.csv(system.file(\"extdata\", \"psuedo_IPD.csv\",   package = \"maicplus\",   mustWork = TRUE )) pseudo_ipd$ARM <- \"B\" pseudo_ipd2 <- pseudo_ipd pseudo_ipd2$ARM <- \"C\" pseudo_ipd2$Time <- pseudo_ipd2$Time + 5 pseudo_ipd <- rbind(pseudo_ipd, pseudo_ipd2)  #### prepare data target_pop <- process_agd(target_pop) adsl <- dummize_ipd(adsl, dummize_cols = c(\"SEX\"), dummize_ref_level = c(\"Female\")) use_adsl <- center_ipd(ipd = adsl, agd = target_pop)  #### derive weights match_res <- estimate_weights(   data = use_adsl,   centered_colnames = grep(\"_CENTERED$\", names(use_adsl)),   start_val = 0,   method = \"BFGS\" )  # plot by trial kmplot2(   weights_object = match_res,   tte_ipd = adtte,   tte_pseudo_ipd = pseudo_ipd,   trt_ipd = \"A\",   trt_agd = \"B\",   trt_common = \"C\",   trt_var_ipd = \"ARM\",   trt_var_agd = \"ARM\",   endpoint_name = \"Overall Survival\",   km_conf_type = \"log-log\",   km_layout = \"by_trial\",   time_scale = \"month\",   break_x_by = 2 ) #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `survtable = purrr::map2(...)`. #> Caused by warning: #> ! `select_()` was deprecated in dplyr 0.7.0. #> ℹ Please use `select()` instead. #> ℹ The deprecated feature was likely used in the survminer package. #>   Please report the issue at <https://github.com/kassambara/survminer/issues>.   # plot by arm kmplot2(   weights_object = match_res,   tte_ipd = adtte,   tte_pseudo_ipd = pseudo_ipd,   trt_ipd = \"A\",   trt_agd = \"B\",   trt_common = \"C\",   trt_var_ipd = \"ARM\",   trt_var_agd = \"ARM\",   endpoint_name = \"Overall Survival\",   km_conf_type = \"log-log\",   km_layout = \"by_arm\",   time_scale = \"month\",   break_x_by = 2 )   # plot all kmplot2(   weights_object = match_res,   tte_ipd = adtte,   tte_pseudo_ipd = pseudo_ipd,   trt_ipd = \"A\",   trt_agd = \"B\",   trt_common = \"C\",   trt_var_ipd = \"ARM\",   trt_var_agd = \"ARM\",   endpoint_name = \"Overall Survival\",   km_conf_type = \"log-log\",   km_layout = \"all\",   time_scale = \"month\",   break_x_by = 2,   xlim = c(0, 20) )  # unanchored example using maicplus_kmplot  ### IPD # Read in relevant ADaM data and rename variables of interest adsl <- read.csv(system.file(\"extdata\", \"adsl.csv\",   package = \"maicplus\",   mustWork = TRUE )) adtte <- read.csv(system.file(\"extdata\", \"adtte.csv\",   package = \"maicplus\",   mustWork = TRUE )) adtte$TIME <- adtte$AVAL adtte$EVENT <- adtte$EVNT  ### AgD # Baseline aggregate data for the comparator population target_pop <- read.csv(system.file(\"extdata\", \"aggregate_data_example_1.csv\",   package = \"maicplus\", mustWork = TRUE )) # for time-to-event endpoints, pseudo IPD from digitalized KM pseudo_ipd <- read.csv(system.file(\"extdata\", \"psuedo_IPD.csv\",   package = \"maicplus\",   mustWork = TRUE )) pseudo_ipd$ARM <- \"B\"  #### prepare data target_pop <- process_agd(target_pop) adsl <- dummize_ipd(adsl, dummize_cols = c(\"SEX\"), dummize_ref_level = c(\"Female\")) use_adsl <- center_ipd(ipd = adsl, agd = target_pop)  #### derive weights match_res <- estimate_weights(   data = use_adsl,   centered_colnames = grep(\"_CENTERED$\", names(use_adsl)),   start_val = 0,   method = \"BFGS\" )   kmplot2(   weights_object = match_res,   tte_ipd = adtte,   tte_pseudo_ipd = pseudo_ipd,   trt_ipd = \"A\",   trt_agd = \"B\",   trt_common = NULL,   trt_var_ipd = \"ARM\",   trt_var_agd = \"ARM\",   endpoint_name = \"Overall Survival\",   km_conf_type = \"log-log\",   time_scale = \"month\",   break_x_by = 2,   xlim = c(0, 20) )"},{"path":"https://hta-pharma.github.io/maicplus/reference/maic_anchored.html","id":null,"dir":"Reference","previous_headings":"","what":"Anchored MAIC for binary and time-to-event endpoint — maic_anchored","title":"Anchored MAIC for binary and time-to-event endpoint — maic_anchored","text":"wrapper function provide adjusted effect estimates relevant statistics anchored case (.e. common comparator arm internal external trial).","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/maic_anchored.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anchored MAIC for binary and time-to-event endpoint — maic_anchored","text":"","code":"maic_anchored(   weights_object,   ipd,   pseudo_ipd,   trt_ipd,   trt_agd,   trt_common,   trt_var_ipd = \"ARM\",   trt_var_agd = \"ARM\",   endpoint_type = \"tte\",   endpoint_name = \"Time to Event Endpoint\",   eff_measure = c(\"HR\", \"OR\", \"RR\", \"RD\", \"Diff\"),   time_scale = \"months\",   km_conf_type = \"log-log\",   boot_ci_type = c(\"norm\", \"basic\", \"stud\", \"perc\", \"bca\") )"},{"path":"https://hta-pharma.github.io/maicplus/reference/maic_anchored.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anchored MAIC for binary and time-to-event endpoint — maic_anchored","text":"weights_object object returned estimate_weight ipd data frame meet format requirements 'Details', individual patient data (IPD) internal trial pseudo_ipd data frame, pseudo IPD digitized KM curve external trial (time--event endpoint) contingency table (binary endpoint) trt_ipd string, name interested investigation arm internal trial ipd (internal IPD) trt_agd string, name interested investigation arm external trial pseudo_ipd (pseudo IPD) trt_common string, name common comparator internal external trial trt_var_ipd string, column name ipd contains treatment assignment trt_var_agd string, column name ipd contains treatment assignment endpoint_type string, one following \"binary\", \"tte\" (time event) endpoint_name string, name time event endpoint, show last line title eff_measure string, \"RD\" (risk difference), \"\" (odds ratio), \"RR\" (relative risk) binary endpoint; \"HR\" time--event endpoint. default NULL, \"\" used binary case, otherwise \"HR\" used. time_scale string, time unit median survival time, taking value 'years', 'months', 'weeks' 'days'. NOTE: assumed values TIME column ipd pseudo_ipd unit days km_conf_type string, pass conf.type survfit boot_ci_type string, one c(\"norm\",\"basic\", \"stud\", \"perc\", \"bca\") select type bootstrap confidence interval. See boot::boot.ci details.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/maic_anchored.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anchored MAIC for binary and time-to-event endpoint — maic_anchored","text":"list, contains 'descriptive' 'inferential'","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/maic_anchored.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anchored MAIC for binary and time-to-event endpoint — maic_anchored","text":"time--event analysis, required input ipd pseudo_ipd following columns. function sensitive upper lower case letters column names. USUBJID - character, unique subject ID ARM - character factor, treatment indicator, column name 'ARM'. User specify trt_var_ipd trt_var_agd EVENT - numeric, 1 censored/death, 0 otherwise TIME - numeric column, observation time EVENT; unit days","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/maic_unanchored.html","id":null,"dir":"Reference","previous_headings":"","what":"Unanchored MAIC for binary and time-to-event endpoint — maic_unanchored","title":"Unanchored MAIC for binary and time-to-event endpoint — maic_unanchored","text":"wrapper function provide adjusted effect estimates relevant statistics unanchored case (.e. common comparator arm internal external trial).","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/maic_unanchored.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unanchored MAIC for binary and time-to-event endpoint — maic_unanchored","text":"","code":"maic_unanchored(   weights_object,   ipd,   pseudo_ipd,   trt_ipd,   trt_agd,   trt_var_ipd = \"ARM\",   trt_var_agd = \"ARM\",   endpoint_type = \"tte\",   endpoint_name = \"Time to Event Endpoint\",   eff_measure = c(\"HR\", \"OR\", \"RR\", \"RD\"),   boot_ci_type = c(\"norm\", \"basic\", \"stud\", \"perc\", \"bca\"),   time_scale = \"months\",   km_conf_type = \"log-log\",   binary_robust_cov_type = \"HC3\" )"},{"path":"https://hta-pharma.github.io/maicplus/reference/maic_unanchored.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unanchored MAIC for binary and time-to-event endpoint — maic_unanchored","text":"weights_object object returned estimate_weight ipd data frame meet format requirements 'Details', individual patient data (IPD) internal trial pseudo_ipd data frame, pseudo IPD digitized KM curve external trial (time--event endpoint) contingency table (binary endpoint) trt_ipd string, name interested investigation arm internal trial dat_igd (real IPD) trt_agd string, name interested investigation arm external trial pseudo_ipd (pseudo IPD) trt_var_ipd string, column name ipd contains treatment assignment trt_var_agd string, column name ipd contains treatment assignment endpoint_type string, one following \"binary\", \"tte\" (time event) endpoint_name string, name time event endpoint, show last line title eff_measure string, \"RD\" (risk difference), \"\" (odds ratio), \"RR\" (relative risk) binary endpoint; \"HR\" time--event endpoint. default NULL, \"\" used binary case, otherwise \"HR\" used. boot_ci_type string, one c(\"norm\",\"basic\", \"stud\", \"perc\", \"bca\") select type bootstrap confidence interval. See boot::boot.ci details. time_scale string, time unit median survival time, taking value 'years', 'months', 'weeks' 'days'. NOTE: assumed values TIME column ipd pseudo_ipd unit days km_conf_type string, pass conf.type survfit binary_robust_cov_type string pass argument type sandwich::vcovHC, see possible options documentation function. Default \"HC3\"","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/maic_unanchored.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unanchored MAIC for binary and time-to-event endpoint — maic_unanchored","text":"list, contains 'descriptive' 'inferential'","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/maic_unanchored.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unanchored MAIC for binary and time-to-event endpoint — maic_unanchored","text":"time--event analysis, required input ipd pseudo_ipd following columns. function sensitive upper lower case letters column names. USUBJID - character, unique subject ID ARM - character factor, treatment indicator, column name 'ARM'. User specify trt_var_ipd trt_var_agd EVENT - numeric, 1 censored/death, 0 otherwise TIME - numeric column, observation time EVENT; unit days","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/maicplus-package.html","id":null,"dir":"Reference","previous_headings":"","what":"maicplus: Matching Adjusted Indirect Comparison — maicplus-package","title":"maicplus: Matching Adjusted Indirect Comparison — maicplus-package","text":"maicplus package facilitates performing matching adjusted indirect comparison (MAIC) analysis endpoint interest either time--event (e.g. overall survival) binary (e.g. objective tumor response).","code":""},{"path":[]},{"path":"https://hta-pharma.github.io/maicplus/reference/maicplus-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"maicplus: Matching Adjusted Indirect Comparison — maicplus-package","text":"Maintainer: hta-pharma hta-pharma@example.com","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/medSurv_makeup.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to retrieve median survival time from a survival::survfit object — medSurv_makeup","title":"Helper function to retrieve median survival time from a survival::survfit object — medSurv_makeup","text":"Extract display median survival time confidence interval","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/medSurv_makeup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to retrieve median survival time from a survival::survfit object — medSurv_makeup","text":"","code":"medSurv_makeup(km_fit, legend = \"before matching\", time_scale)"},{"path":"https://hta-pharma.github.io/maicplus/reference/medSurv_makeup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to retrieve median survival time from a survival::survfit object — medSurv_makeup","text":"km_fit returned object survival::survfit legend character string, name used 'type' column returned data frame time_scale character string, 'years', 'months', 'weeks' 'days', time unit median survival time","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/medSurv_makeup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to retrieve median survival time from a survival::survfit object — medSurv_makeup","text":"data frame index column 'type', median survival time confidence interval","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/medSurv_makeup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to retrieve median survival time from a survival::survfit object — medSurv_makeup","text":"","code":"library(survival) load(system.file(\"extdata\", \"combined_data_tte.rda\", package = \"maicplus\", mustWork = TRUE)) kmobj <- survfit(Surv(TIME, EVENT) ~ ARM, combined_data_tte, conf.type = \"log-log\") kmobj_adj <- survfit(Surv(TIME, EVENT) ~ ARM, combined_data_tte,   weights = combined_data_tte$weights, conf.type = \"log-log\" )  # Derive median survival time medSurv <- medSurv_makeup(kmobj, legend = \"before matching\", time_scale = \"day\") medSurv_adj <- medSurv_makeup(kmobj_adj, legend = \"after matching\", time_scale = \"day\") medSurv_out <- rbind(medSurv, medSurv_adj) medSurv_out #>   treatment            type records    n.max  n.start    events    rmean #> 1     ARM=A before matching     500 500.0000 500.0000 190.00000 265.1012 #> 2     ARM=B before matching     300 300.0000 300.0000 178.00000 130.9893 #> 3     ARM=A  after matching     500 199.8422 199.8422  66.84953 307.7223 #> 4     ARM=B  after matching     300 300.0000 300.0000 178.00000 130.9893 #>   se(rmean)    median   0.95LCL  0.95UCL #> 1  10.80981 230.94839 191.10767 313.1574 #> 2  10.24910  83.58535  68.82298 101.0786 #> 3  16.71338 362.20670 237.05932 452.7209 #> 4  10.24910  83.58535  68.82298 101.0786"},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnosis plot of proportional hazard assumption for anchored and unanchored — ph_diagplot","title":"Diagnosis plot of proportional hazard assumption for anchored and unanchored — ph_diagplot","text":"Diagnosis plot proportional hazard assumption anchored unanchored","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnosis plot of proportional hazard assumption for anchored and unanchored — ph_diagplot","text":"","code":"ph_diagplot(   weights_object,   tte_ipd,   tte_pseudo_ipd,   trt_ipd,   trt_agd,   trt_common = NULL,   trt_var_ipd = \"ARM\",   trt_var_agd = \"ARM\",   endpoint_name = \"Time to Event Endpoint\",   time_scale,   zph_transform = \"log\",   zph_log_hazard = TRUE )"},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnosis plot of proportional hazard assumption for anchored and unanchored — ph_diagplot","text":"weights_object object returned estimate_weight tte_ipd data frame individual patient data (IPD) internal trial, contain least \"USUBJID\", \"EVENT\", \"TIME\" columns column indicating treatment assignment tte_pseudo_ipd data frame pseudo IPD digitized KM curves external trial (time--event endpoint), contain least \"EVENT\", \"TIME\" trt_ipd string, name interested investigation arm internal trial dat_igd (real IPD) trt_agd string, name interested investigation arm external trial dat_pseudo (pseudo IPD) trt_common string, name common comparator internal external trial, default NULL, indicating unanchored case trt_var_ipd string, column name dat_ipd contains treatment assignment trt_var_agd string, column name dat_ipd contains treatment assignment endpoint_name string, name time event endpoint, show last line title time_scale string, time unit median survival time, taking value 'years', 'months', 'weeks' 'days' zph_transform string, pass survival::cox.zph, default \"log\" zph_log_hazard logical, TRUE (default), y axis time dependent hazard function log-hazard, otherwise, hazard.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnosis plot of proportional hazard assumption for anchored and unanchored — ph_diagplot","text":"3 2 plot, include log-cumulative hazard plot, time dependent hazard function unscaled Schoenfeld residual plot, matching","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot_lch.html","id":null,"dir":"Reference","previous_headings":"","what":"PH Diagnosis Plot of Log Cumulative Hazard Rate versus time or log-time — ph_diagplot_lch","title":"PH Diagnosis Plot of Log Cumulative Hazard Rate versus time or log-time — ph_diagplot_lch","text":"plot also known log negative log survival rate.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot_lch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PH Diagnosis Plot of Log Cumulative Hazard Rate versus time or log-time — ph_diagplot_lch","text":"","code":"ph_diagplot_lch(   km_fit,   time_scale,   log_time = TRUE,   endpoint_name = \"\",   subtitle = \"\",   exclude_censor = TRUE )"},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot_lch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PH Diagnosis Plot of Log Cumulative Hazard Rate versus time or log-time — ph_diagplot_lch","text":"km_fit returned object survival::survfit time_scale character string, 'years', 'months', 'weeks' 'days', time unit median survival time log_time logical, TRUE (default) FALSE endpoint_name character string, name endpoint subtitle character string, subtitle plot exclude_censor logical, censored data point plotted","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot_lch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PH Diagnosis Plot of Log Cumulative Hazard Rate versus time or log-time — ph_diagplot_lch","text":"plot log cumulative hazard rate","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot_lch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PH Diagnosis Plot of Log Cumulative Hazard Rate versus time or log-time — ph_diagplot_lch","text":"diagnosis plot proportional hazard assumption, versus log-time (default) time","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot_lch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PH Diagnosis Plot of Log Cumulative Hazard Rate versus time or log-time — ph_diagplot_lch","text":"","code":"library(survival) load(system.file(\"extdata\", \"combined_data_tte.rda\", package = \"maicplus\", mustWork = TRUE)) kmobj <- survfit(Surv(TIME, EVENT) ~ ARM, combined_data_tte, conf.type = \"log-log\") ph_diagplot_lch(kmobj,   time_scale = \"month\", log_time = TRUE,   endpoint_name = \"OS\", subtitle = \"(Before Matching)\" )"},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot_schoenfeld.html","id":null,"dir":"Reference","previous_headings":"","what":"PH Diagnosis Plot of Schoenfeld residuals for a Cox model fit — ph_diagplot_schoenfeld","title":"PH Diagnosis Plot of Schoenfeld residuals for a Cox model fit — ph_diagplot_schoenfeld","text":"PH Diagnosis Plot Schoenfeld residuals Cox model fit","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot_schoenfeld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PH Diagnosis Plot of Schoenfeld residuals for a Cox model fit — ph_diagplot_schoenfeld","text":"","code":"ph_diagplot_schoenfeld(   coxobj,   time_scale = \"months\",   log_time = TRUE,   endpoint_name = \"\",   subtitle = \"\" )"},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot_schoenfeld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PH Diagnosis Plot of Schoenfeld residuals for a Cox model fit — ph_diagplot_schoenfeld","text":"coxobj object returned coxph time_scale character string, 'years', 'months', 'weeks' 'days', time unit median survival time log_time logical, TRUE (default) FALSE endpoint_name character string, name endpoint subtitle character string, subtitle plot","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot_schoenfeld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PH Diagnosis Plot of Schoenfeld residuals for a Cox model fit — ph_diagplot_schoenfeld","text":"plot Schoenfeld residuals","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/ph_diagplot_schoenfeld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PH Diagnosis Plot of Schoenfeld residuals for a Cox model fit — ph_diagplot_schoenfeld","text":"","code":"library(survival) load(system.file(\"extdata\", \"combined_data_tte.rda\", package = \"maicplus\", mustWork = TRUE)) unweighted_cox <- coxph(Surv(TIME, EVENT == 1) ~ ARM, data = combined_data_tte) ph_diagplot_schoenfeld(unweighted_cox,   time_scale = \"month\", log_time = TRUE,   endpoint_name = \"OS\", subtitle = \"(Before Matching)\" )"},{"path":"https://hta-pharma.github.io/maicplus/reference/plot_weights_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MAIC weights in a histogram with key statistics in legend — plot_weights_base","title":"Plot MAIC weights in a histogram with key statistics in legend — plot_weights_base","text":"Generates base R histogram weights. Default plot either unscaled scaled weights .","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/plot_weights_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MAIC weights in a histogram with key statistics in legend — plot_weights_base","text":"","code":"plot_weights_base(   weighted_data,   bin_col,   vline_col,   main_title,   scaled_weights )"},{"path":"https://hta-pharma.github.io/maicplus/reference/plot_weights_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MAIC weights in a histogram with key statistics in legend — plot_weights_base","text":"weighted_data object returned calculating weights using estimate_weights bin_col string, color bins histogram vline_col string, color vertical line histogram main_title title plot scaled_weights indicator using scaled weights instead regular weights","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/plot_weights_base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MAIC weights in a histogram with key statistics in legend — plot_weights_base","text":"plot unscaled scaled weights","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/plot_weights_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MAIC weights in a histogram with key statistics in legend using ggplot2 — plot_weights_ggplot","title":"Plot MAIC weights in a histogram with key statistics in legend using ggplot2 — plot_weights_ggplot","text":"Generates ggplot histogram weights. Default plot unscaled scaled weights graph.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/plot_weights_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MAIC weights in a histogram with key statistics in legend using ggplot2 — plot_weights_ggplot","text":"","code":"plot_weights_ggplot(weighted_data, bin_col, vline_col, main_title, bins)"},{"path":"https://hta-pharma.github.io/maicplus/reference/plot_weights_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MAIC weights in a histogram with key statistics in legend using ggplot2 — plot_weights_ggplot","text":"weighted_data object returned calculating weights using estimate_weights bin_col string, color bins histogram vline_col string, color vertical line histogram main_title Name scaled weights plot unscaled weights plot, respectively. bins number bin parameter use","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/plot_weights_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MAIC weights in a histogram with key statistics in legend using ggplot2 — plot_weights_ggplot","text":"plot unscaled scaled weights","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/process_agd.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-process aggregate data — process_agd","title":"Pre-process aggregate data — process_agd","text":"function checks format aggregate data. Data required three columns: STUDY, ARM, N. Column names legal suffixes (MEAN, MEDIAN, SD, COUNT, PROP) dropped. variable count variable, converted proportions dividing sample size (N). Note, count specified, proportion always calculated based count, , specified proportion ignored applicable. aggregated data comes multiple sources (.e. different analysis population) sample size differs variable, one option specify proportion directly instead count using suffix _PROP.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/process_agd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-process aggregate data — process_agd","text":"","code":"process_agd(raw_agd)"},{"path":"https://hta-pharma.github.io/maicplus/reference/process_agd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-process aggregate data — process_agd","text":"raw_agd raw aggregate data contain STUDY, ARM, N. Variable names followed legal suffixes (.e. MEAN, MEDIAN, SD, COUNT, PROP).","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/process_agd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-process aggregate data — process_agd","text":"pre-processed aggregate level data","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/process_agd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-process aggregate data — process_agd","text":"","code":"target_pop <- read.csv(system.file(\"extdata\", \"aggregate_data_example_1.csv\",   package = \"maicplus\", mustWork = TRUE )) target_pop2 <- read.csv(system.file(\"extdata\", \"aggregate_data_example_2.csv\",   package = \"maicplus\", mustWork = TRUE )) target_pop3 <- read.csv(system.file(\"extdata\", \"aggregate_data_example_3.csv\",   package = \"maicplus\", mustWork = TRUE ))  target_pop <- process_agd(target_pop) target_pop2 <- process_agd(target_pop2) target_pop3 <- process_agd(target_pop3)"},{"path":"https://hta-pharma.github.io/maicplus/reference/report_table_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function: sort out a nice report table to summarize binary analysis results — report_table_binary","title":"helper function: sort out a nice report table to summarize binary analysis results — report_table_binary","text":"helper function: sort nice report table summarize binary analysis results","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/report_table_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function: sort out a nice report table to summarize binary analysis results — report_table_binary","text":"","code":"report_table_binary(   binobj,   weighted_result = NULL,   eff_measure = c(\"OR\", \"RD\", \"RR\"),   tag = NULL )"},{"path":"https://hta-pharma.github.io/maicplus/reference/report_table_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function: sort out a nice report table to summarize binary analysis results — report_table_binary","text":"binobj object glm() weighted_result object res_AB eff_measure string, binary effect measure, \"\", \"RR\", \"RD\" tag string, default NULL, specified, extra 1st column created output","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/report_table_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function: sort out a nice report table to summarize binary analysis results — report_table_binary","text":"data frame sample size, incidence rate, estimate binary effect measure 95% CI Wald test hazard ratio","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/report_table_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function: sort out a nice report table to summarize survival analysis results — report_table_tte","title":"helper function: sort out a nice report table to summarize survival analysis results — report_table_tte","text":"helper function: sort nice report table summarize survival analysis results","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/report_table_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function: sort out a nice report table to summarize survival analysis results — report_table_tte","text":"","code":"report_table_tte(coxobj, medSurvobj, tag = NULL)"},{"path":"https://hta-pharma.github.io/maicplus/reference/report_table_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function: sort out a nice report table to summarize survival analysis results — report_table_tte","text":"coxobj returned object coxph medSurvobj returned object medSurv_makeup tag string, default NULL, specified, extra 1st column created output","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/report_table_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function: sort out a nice report table to summarize survival analysis results — report_table_tte","text":"data frame sample size, incidence rate, median survival time 95% CI, hazard ratio estimate 95% CI Wald test hazard ratio","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/survfit_makeup.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to select set of variables used for Kaplan-Meier plot — survfit_makeup","title":"Helper function to select set of variables used for Kaplan-Meier plot — survfit_makeup","text":"Helper function select set variables used Kaplan-Meier plot","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/survfit_makeup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to select set of variables used for Kaplan-Meier plot — survfit_makeup","text":"","code":"survfit_makeup(km_fit, single_trt_name = \"treatment\")"},{"path":"https://hta-pharma.github.io/maicplus/reference/survfit_makeup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to select set of variables used for Kaplan-Meier plot — survfit_makeup","text":"km_fit returned object survival::survfit single_trt_name name treatment strata specified km_fit","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/survfit_makeup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to select set of variables used for Kaplan-Meier plot — survfit_makeup","text":"list data frames variables survival::survfit(). Data frame divided treatment.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/survfit_makeup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to select set of variables used for Kaplan-Meier plot — survfit_makeup","text":"","code":"if (FALSE) { load(system.file(\"extdata\", \"combined_data_tte.rda\", package = \"maicplus\", mustWork = TRUE)) kmobj <- survfit(Surv(TIME, EVENT) ~ ARM, combined_data_tte, conf.type = \"log-log\") survfit_makeup(kmobj) }"},{"path":"https://hta-pharma.github.io/maicplus/reference/time_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and Set Time Conversion Factors — set_time_conversion","title":"Get and Set Time Conversion Factors — set_time_conversion","text":"Get Set Time Conversion Factors","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/time_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and Set Time Conversion Factors — set_time_conversion","text":"","code":"set_time_conversion(days = 1, weeks = 7, months = 365.25/12, years = 365.25)  get_time_conversion(factor = c(\"days\", \"weeks\", \"months\", \"years\"))"},{"path":"https://hta-pharma.github.io/maicplus/reference/time_conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and Set Time Conversion Factors — set_time_conversion","text":"days Factor divide data time units get time days weeks Factor divide data time units get time weeks months Factor divide data time units get time months years Factor divide data time units get time years factor Time factor get.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/time_conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and Set Time Conversion Factors — set_time_conversion","text":"value returned. Conversion factors stored internally used within functions.","code":""},{"path":"https://hta-pharma.github.io/maicplus/reference/time_conversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and Set Time Conversion Factors — set_time_conversion","text":"","code":"# Native time format is years set_time_conversion(days = 1 / 365.25, weeks = 1 / 52.17857, months = 1 / 12, years = 1)  # Native time format is days set_time_conversion(days = 1, weeks = 7, months = 365.25 / 12, years = 365.25) # Get time scale factors: get_time_conversion(\"years\") #>  years  #> 365.25  get_time_conversion(\"weeks\") #> weeks  #>     7"},{"path":[]},{"path":"https://hta-pharma.github.io/maicplus/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"maicplus 0.1.0","text":"Add initializer script.","code":""},{"path":"https://hta-pharma.github.io/maicplus/news/index.html","id":"enhancements-0-1-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"maicplus 0.1.0","text":"Documentation use initialize package.","code":""},{"path":"https://hta-pharma.github.io/maicplus/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"maicplus 0.1.0","text":"None.","code":""}]
