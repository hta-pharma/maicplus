% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bucher.R
\name{find_RR}
\alias{find_RR}
\title{Retrieve relative risk and log relative risk with associated standard error and confidence interval}
\usage{
find_RR(fit = NULL, logRR = NULL, logRR_SE = NULL, conf_lv = 0.95)
}
\arguments{
\item{fit}{weighted or unweighted regression fit (i.e. cox regression or logistic regression) where the logRR can be extracted from}

\item{logRR}{Instead of providing the fitted model (via parameter \link{fit}), one can specify logRR manually through this parameter}

\item{logRR_SE}{If logRR is specified, standard error has to be provided.}

\item{conf_lv}{Defines the percentage of confidence interval}
}
\value{
a list with 6 elements,
\describe{
\item{RR}{an estimate of relative risk}
\item{RR_SE}{standard error of the relative risk}
\item{RR_CI}{Two-sided CI with prescribed nominal level by \link{conf_lv}}
\item{pval}{p-value of Z-test, with null hypothesis that RR is zero}
\item{logRR}{an estimate of log of relative risk}
\item{logRR_SE}{standard error of the log of relative risk}
}
}
\description{
Convenient function to retrieve both the relative risk (RR) and log relative risk (logRR) either from
fitted model or separate calculation.
Relative risk would be hazard ratio for the cox regression and odds ratio for the logistic regression.
Delta method is used to calculate the standard error of the relative risk.
There are two ways of finding CI of the relative risk:
use se(RR) obtained via the delta method and calculate the end points or
form a confidence interval for logRR and then exponentiate the endpoints.
We will use the second method since logRR converges to a normal distribution
more quickly than RR. This is also a default coxph method in \link{survival} R package.
}
\examples{
set.seed(1)
ipd <- generate_survival_data() # fix column names and time
colnames(ipd) <- c("USUBJID", "TIME", "EVENT", "ARM", "X1", "X2", "X3", "X4")
ipd$TIME <- ipd$TIME * 365
ipd$ARM <- ifelse(ipd$ARM == 1, "A", "C")
ipd$ARM <- stats::relevel(as.factor(ipd$ARM), ref = "C")

adtte <- ipd[, c("USUBJID", "TIME", "EVENT", "ARM")]

unweighted_cox <- coxph(Surv(TIME, EVENT == 1) ~ ARM, data = ipd)
RR <- find_RR(unweighted_cox)
}
